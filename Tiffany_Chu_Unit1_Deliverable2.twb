<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <ISO8601PeriodTypes />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Time Interval' datatype='date' name='[Latitude Parameter]' param-domain-type='range' role='measure' type='quantitative' value='#2018-04-01#'>
        <calculation class='tableau' formula='#2018-04-01#' />
        <range granularity='1' max='#2019-12-31#' min='#2018-01-01#' period-type-v2='month' />
      </column>
      <column caption='Number Of States' datatype='integer' name='[Number Of Airlines (copy 2)_2003820407350104075]' param-domain-type='range' role='measure' type='quantitative' value='30'>
        <calculation class='tableau' formula='30' />
        <range max='50' min='1' />
      </column>
      <column caption='Number of States' datatype='integer' name='[Number Of Airlines (copy)]' param-domain-type='range' role='measure' type='quantitative' value='17'>
        <calculation class='tableau' formula='17' />
        <range max='50' min='1' />
      </column>
      <column caption='Number of States_' datatype='integer' name='[Taxi In Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range max='50' min='1' />
      </column>
    </datasource>
    <datasource caption='flights+ (airtraffic)' inline='true' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.13rwvgc1xw454r152ab2m0n7woco'>
            <connection class='mysql' dbname='airtraffic' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[flights].[OriginAirportID]' />
              <expression op='[airports].[AirportID]' />
            </expression>
          </clause>
          <relation connection='mysql.13rwvgc1xw454r152ab2m0n7woco' name='flights' table='[flights]' type='table' />
          <relation connection='mysql.13rwvgc1xw454r152ab2m0n7woco' name='airports' table='[airports]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[flights].[OriginAirportID]' />
              <expression op='[airports].[AirportID]' />
            </expression>
          </clause>
          <relation connection='mysql.13rwvgc1xw454r152ab2m0n7woco' name='flights' table='[flights]' type='table' />
          <relation connection='mysql.13rwvgc1xw454r152ab2m0n7woco' name='airports' table='[airports]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[AirTime]' value='[flights].[AirTime]' />
          <map key='[AirlineName]' value='[flights].[AirlineName]' />
          <map key='[AirportID]' value='[airports].[AirportID]' />
          <map key='[AirportName]' value='[airports].[AirportName]' />
          <map key='[ArrDelay]' value='[flights].[ArrDelay]' />
          <map key='[ArrTime]' value='[flights].[ArrTime]' />
          <map key='[CRSArrTime]' value='[flights].[CRSArrTime]' />
          <map key='[CRSDepTime]' value='[flights].[CRSDepTime]' />
          <map key='[CancellationReason]' value='[flights].[CancellationReason]' />
          <map key='[Cancelled]' value='[flights].[Cancelled]' />
          <map key='[City]' value='[airports].[City]' />
          <map key='[Country]' value='[airports].[Country]' />
          <map key='[DepDelay]' value='[flights].[DepDelay]' />
          <map key='[DepTime]' value='[flights].[DepTime]' />
          <map key='[DestAirportID]' value='[flights].[DestAirportID]' />
          <map key='[Distance]' value='[flights].[Distance]' />
          <map key='[Diverted]' value='[flights].[Diverted]' />
          <map key='[FlightDate]' value='[flights].[FlightDate]' />
          <map key='[Flight_Number_Reporting_Airline]' value='[flights].[Flight_Number_Reporting_Airline]' />
          <map key='[Latitude]' value='[airports].[Latitude]' />
          <map key='[Longitude]' value='[airports].[Longitude]' />
          <map key='[OriginAirportID]' value='[flights].[OriginAirportID]' />
          <map key='[Reporting_Airline]' value='[flights].[Reporting_Airline]' />
          <map key='[State]' value='[airports].[State]' />
          <map key='[Tail_Number]' value='[flights].[Tail_Number]' />
          <map key='[TaxiIn]' value='[flights].[TaxiIn]' />
          <map key='[TaxiOut]' value='[flights].[TaxiOut]' />
          <map key='[WheelsOff]' value='[flights].[WheelsOff]' />
          <map key='[WheelsOn]' value='[flights].[WheelsOn]' />
          <map key='[id (airports)]' value='[airports].[id]' />
          <map key='[id]' value='[flights].[id]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FlightDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[FlightDate]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>FlightDate</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Reporting_Airline</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Reporting_Airline]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Reporting_Airline</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>32</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tail_Number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Tail_Number]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Tail_Number</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>32</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight_Number_Reporting_Airline</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Flight_Number_Reporting_Airline]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Flight_Number_Reporting_Airline</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>32</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OriginAirportID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[OriginAirportID]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>OriginAirportID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DestAirportID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DestAirportID]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>DestAirportID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSDepTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CRSDepTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>CRSDepTime</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DepTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>DepTime</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DepDelay</remote-name>
            <remote-type>3</remote-type>
            <local-name>[DepDelay]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>DepDelay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiOut</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TaxiOut]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>TaxiOut</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOff</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WheelsOff]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>WheelsOff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WheelsOn</remote-name>
            <remote-type>130</remote-type>
            <local-name>[WheelsOn]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>WheelsOn</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TaxiIn</remote-name>
            <remote-type>3</remote-type>
            <local-name>[TaxiIn]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>TaxiIn</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRSArrTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CRSArrTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>CRSArrTime</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrTime</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ArrTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>ArrTime</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ArrDelay</remote-name>
            <remote-type>3</remote-type>
            <local-name>[ArrDelay]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>ArrDelay</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cancelled</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Cancelled]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Cancelled</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diverted</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Diverted]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Diverted</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirTime</remote-name>
            <remote-type>3</remote-type>
            <local-name>[AirTime]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>AirTime</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirlineName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirlineName]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>AirlineName</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CancellationReason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CancellationReason]</local-name>
            <parent-name>[flights]</parent-name>
            <remote-alias>CancellationReason</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id (airports)]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirportID</remote-name>
            <remote-type>3</remote-type>
            <local-name>[AirportID]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>AirportID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AirportName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AirportName]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>AirportName</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>128</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[airports]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
      <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
      <column caption='Airport ID' datatype='integer' name='[AirportID]' role='dimension' type='ordinal' />
      <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
      <column caption='Arr Delay' datatype='integer' name='[ArrDelay]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Arr Time' datatype='string' default-role='measure' default-type='quantitative' name='[ArrTime]' role='dimension' type='nominal' />
      <column caption='CRS Arr Time' datatype='string' name='[CRSArrTime]' role='dimension' type='nominal' />
      <column caption='CRS Dep Time' datatype='string' name='[CRSDepTime]' role='dimension' type='nominal' />
      <column caption='Delay Identifier' datatype='string' name='[Calculation_1714464130766577664]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ([DepDelay] &lt;= 0) OR ISNULL([DepDelay]) THEN &quot;On-time&quot; ELSE &quot;Delayed Departure&quot; END' />
      </column>
      <column caption='Valid Flight ID' datatype='integer' name='[Calculation_1894326642097287177]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL([id]) OR [Cancelled] = 1 THEN NULL ELSE [id] END' />
      </column>
      <column caption='Valid Flights' datatype='integer' name='[Calculation_1894326642316476426]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Cancelled] = 0 AND NOT ISNULL([ArrTime]) THEN 1 ELSE 0 END' />
      </column>
      <column caption='DelayOnly' datatype='integer' name='[Calculation_2003820406851547136]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [DepDelay]&gt;=0 THEN [DepDelay] ELSE 0 END' />
      </column>
      <column caption='Average Distance per Plane' datatype='real' name='[Calculation_2003820407262175235]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Distance])/COUNTD([Tail_Number])' />
      </column>
      <column caption='Costs Per Mile Flown' datatype='real' name='[Calculation_2003820407262814212]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1 / [Calculation_2003820407262175235]' />
      </column>
      <column caption='Cancellation Rate' datatype='real' name='[Calculation_2003820407275249670]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Cancelled]) / COUNT([id])' />
      </column>
      <column caption='Number of States' datatype='real' name='[Calculation_2003820407295160328]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([State]) = [Calculation_2003820407295160328]' />
      </column>
      <column caption='Delayed Only' datatype='integer' name='[Calculation_2003820407344709642]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Calculation_1714464130766577664]) = &quot;Delayed Departure&quot; THEN [DepDelay] END' />
      </column>
      <column caption='Cancellation Reason' datatype='string' name='[CancellationReason]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='string' name='[DepTime]' role='dimension' type='nominal' />
      <column caption='Dest Airport ID' datatype='integer' name='[DestAirportID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
      <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
      <column caption='Flight Number Reporting Airline' datatype='string' name='[Flight_Number_Reporting_Airline]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Origin Airport ID' datatype='integer' name='[OriginAirportID]' role='dimension' type='ordinal' />
      <column caption='Reporting Airline' datatype='string' name='[Reporting_Airline]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Tail Number' datatype='string' name='[Tail_Number]' role='dimension' type='nominal' />
      <column caption='Taxi In' datatype='integer' name='[TaxiIn]' role='measure' type='quantitative' />
      <column caption='Taxi Out' datatype='integer' name='[TaxiOut]' role='measure' type='quantitative' />
      <column caption='Wheels Off' datatype='string' name='[WheelsOff]' role='dimension' type='nominal' />
      <column caption='Wheels On' datatype='string' name='[WheelsOn]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='flights' datatype='table' name='[__tableau_internal_object_id__].[flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E]' role='measure' type='quantitative' />
      <column caption='Id (Airports)' datatype='integer' name='[id (airports)]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column-instance column='[Calculation_2003820407344709642]' derivation='Avg' name='[avg:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cancelled]' derivation='Count' name='[cnt:Cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tail_Number]' derivation='CountD' name='[ctd:Tail_Number:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FlightDate]' derivation='Month' name='[mn:FlightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1714464130766577664]' derivation='None' name='[none:Calculation_1714464130766577664:nk]' pivot='key' type='nominal' />
      <column-instance column='[CancellationReason]' derivation='None' name='[none:CancellationReason:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Cancelled]' derivation='Count' name='[pcdf:cnt:Cancelled:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Tail_Number]' derivation='CountD' name='[pcdf:ctd:Tail_Number:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2003820407344709642]' derivation='Sum' name='[pcdf:sum:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cancelled]' derivation='Sum' name='[pcdf:sum:Cancelled:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cancelled]' derivation='Sum' name='[pcdf:sum:Cancelled:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Distance]' derivation='Sum' name='[pcdf:sum:Distance:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2003820407344709642]' derivation='Sum' name='[pcto:sum:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[FlightDate]' derivation='Quarter' name='[qr:FlightDate:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2003820406851547136]' derivation='Sum' name='[sum:Calculation_2003820406851547136:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2003820407344709642]' derivation='Sum' name='[sum:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2003820407262175235]' derivation='User' name='[usr:Calculation_2003820407262175235:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cancelled]' derivation='Sum' name='[win:sum:Cancelled:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Inclusions (Airline Name,MONTH(Flight Date),QUARTER(Flight Date),YEAR(Flight Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:AirlineName:nk]' />
          <groupfilter function='level-members' level='[mn:FlightDate:ok]' />
          <groupfilter function='level-members' level='[qr:FlightDate:ok]' />
          <groupfilter function='level-members' level='[yr:FlightDate:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='false' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Tiffany/Documents/My Tableau Repository/Datasources/airtraffic.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/29/2024 02:57:06 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[AirTime]' value='[Extract].[AirTime]' />
            <map key='[AirlineName]' value='[Extract].[AirlineName]' />
            <map key='[AirportID]' value='[Extract].[AirportID]' />
            <map key='[AirportName]' value='[Extract].[AirportName]' />
            <map key='[ArrDelay]' value='[Extract].[ArrDelay]' />
            <map key='[ArrTime]' value='[Extract].[ArrTime]' />
            <map key='[CRSArrTime]' value='[Extract].[CRSArrTime]' />
            <map key='[CRSDepTime]' value='[Extract].[CRSDepTime]' />
            <map key='[CancellationReason]' value='[Extract].[CancellationReason]' />
            <map key='[Cancelled]' value='[Extract].[Cancelled]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[DepDelay]' value='[Extract].[DepDelay]' />
            <map key='[DepTime]' value='[Extract].[DepTime]' />
            <map key='[DestAirportID]' value='[Extract].[DestAirportID]' />
            <map key='[Distance]' value='[Extract].[Distance]' />
            <map key='[Diverted]' value='[Extract].[Diverted]' />
            <map key='[FlightDate]' value='[Extract].[FlightDate]' />
            <map key='[Flight_Number_Reporting_Airline]' value='[Extract].[Flight_Number_Reporting_Airline]' />
            <map key='[Latitude]' value='[Extract].[Latitude]' />
            <map key='[Longitude]' value='[Extract].[Longitude]' />
            <map key='[OriginAirportID]' value='[Extract].[OriginAirportID]' />
            <map key='[Reporting_Airline]' value='[Extract].[Reporting_Airline]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Tail_Number]' value='[Extract].[Tail_Number]' />
            <map key='[TaxiIn]' value='[Extract].[TaxiIn]' />
            <map key='[TaxiOut]' value='[Extract].[TaxiOut]' />
            <map key='[WheelsOff]' value='[Extract].[WheelsOff]' />
            <map key='[WheelsOn]' value='[Extract].[WheelsOn]' />
            <map key='[id (airports)]' value='[Extract].[id]' />
            <map key='[id]' value='[Extract].[id1]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='flights+ (airtraffic)' increment-value='%null%' refresh-type='create' rows-inserted='6521361' timestamp-start='2024-01-29 14:55:36.227' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id1</remote-alias>
              <ordinal>0</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6521361</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FlightDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[FlightDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FlightDate</remote-alias>
              <ordinal>1</ordinal>
              <family>flights</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>730</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Reporting_Airline</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Reporting_Airline]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Reporting_Airline</remote-alias>
              <ordinal>2</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tail_Number</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Tail_Number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tail_Number</remote-alias>
              <ordinal>3</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3921</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Flight_Number_Reporting_Airline</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Flight_Number_Reporting_Airline]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Flight_Number_Reporting_Airline</remote-alias>
              <ordinal>4</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21002</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OriginAirportID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[OriginAirportID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OriginAirportID</remote-alias>
              <ordinal>5</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DestAirportID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DestAirportID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DestAirportID</remote-alias>
              <ordinal>6</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>220</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSDepTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CRSDepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSDepTime</remote-alias>
              <ordinal>7</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1857</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DepTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepTime</remote-alias>
              <ordinal>8</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1800</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DepDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DepDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DepDelay</remote-alias>
              <ordinal>9</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1041</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiOut</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiOut]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiOut</remote-alias>
              <ordinal>10</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>201</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WheelsOff</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WheelsOff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WheelsOff</remote-alias>
              <ordinal>11</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1737</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WheelsOn</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WheelsOn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WheelsOn</remote-alias>
              <ordinal>12</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2115</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TaxiIn</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TaxiIn]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TaxiIn</remote-alias>
              <ordinal>13</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>90</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CRSArrTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CRSArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CRSArrTime</remote-alias>
              <ordinal>14</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1607</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrTime</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ArrTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrTime</remote-alias>
              <ordinal>15</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2116</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ArrDelay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ArrDelay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ArrDelay</remote-alias>
              <ordinal>16</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1159</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cancelled</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cancelled]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cancelled</remote-alias>
              <ordinal>17</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Diverted</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Diverted]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Diverted</remote-alias>
              <ordinal>18</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirTime</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AirTime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirTime</remote-alias>
              <ordinal>19</ordinal>
              <family>flights</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>857</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Distance</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Distance]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Distance</remote-alias>
              <ordinal>20</ordinal>
              <family>flights</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1419</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirlineName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AirlineName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirlineName</remote-alias>
              <ordinal>21</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CancellationReason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CancellationReason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CancellationReason</remote-alias>
              <ordinal>22</ordinal>
              <family>flights</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id (airports)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>23</ordinal>
              <family>airports</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirportID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[AirportID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirportID</remote-alias>
              <ordinal>24</ordinal>
              <family>airports</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AirportName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AirportName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AirportName</remote-alias>
              <ordinal>25</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>26</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>233</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>27</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>28</ordinal>
              <family>airports</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>59</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>29</ordinal>
              <family>airports</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>30</ordinal>
              <family>airports</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>238</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:ctd:Tail_Number:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820407344709642:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Calculation_2003820407344709642:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:sum:Calculation_2003820407344709642:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820407344709642:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Cancelled:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:Cancelled:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[win:sum:Cancelled:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Distance:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AirlineName:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;American Airlines Inc.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delta Air Lines Inc.&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1714464130766577664:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;On-time&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Delayed Departure&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CancellationReason:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Carrier&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Weather&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;National Air System&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='flights' id='flights_AE4CBEF9BC2642A6A6EB50DFBEC0CE2E'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[flights].[OriginAirportID]' />
                    <expression op='[airports].[AirportID]' />
                  </expression>
                </clause>
                <relation connection='mysql.13rwvgc1xw454r152ab2m0n7woco' name='flights' table='[flights]' type='table' />
                <relation connection='mysql.13rwvgc1xw454r152ab2m0n7woco' name='airports' table='[airports]' type='table' />
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='2.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2.1 </run>
            <run bold='true'>On-time VS. Delayed Flights per Month in 2019</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Includes the percentage of total flights that are &apos;delayed&apos; or &apos;on time&apos; </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>September has the highest number of on time flights and June has the highest number of delayed flights.</run>
            <run> However those are both months with a high number of flights. The highest ratio of &apos;on time&apos; : &apos;delayed&apos; is September at 7:3, for the highest amount of delayed relative to on time (delayed : on-time) is 55:45 in June. Overall, most flights are on time, with more flights being on time around the fall months (Aug - Nov).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Delay Identifier' datatype='string' name='[Calculation_1714464130766577664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([DepDelay] &lt;= 0) OR ISNULL([DepDelay]) THEN &quot;On-time&quot; ELSE &quot;Delayed Departure&quot; END' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Month' name='[mn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='None' name='[none:Calculation_1714464130766577664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='Count' name='[pcto:cnt:Calculation_1714464130766577664:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Calculation_1714464130766577664]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[FlightDate]' derivation='Quarter' name='[qr:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]'>
            <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:id:qk]' scope='cols' value='Total Flights' />
            <format attr='height' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:id:qk]' value='47' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]' value='80' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' value='40' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[qr:FlightDate:ok]' value='60' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:Calculation_1714464130766577664:qk:4]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok] / ([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[qr:FlightDate:ok] / [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]))</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{AABD6E51-61F2-43BA-82CE-CD0C7D1DC4C7}' />
    </worksheet>
    <worksheet name='2.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2.2 </run>
            <run bold='true'>Average Departure Delay for each State in 2019 by Quarter</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Compares the departure delay</run>
            <run bold='true' fontsize='10'> in minutes</run>
            <run fontsize='10'> for flights greater than 0 and not null</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The states that have the highest delay are</run>
            <run bold='true'> North Dakota (91.0 in Q1), West Virginia (87.75 in Q1), and Wyoming (84.66 in Q1).</run>
            <run>  Considering these are major airports with at least 1.1x more flights during Q1 than other quarters, the strain on their airport system can cause substantial delays. 

It is also known that North Dakota experiences severe storms every winter, which could explain the high delays,  especially relative to its other quarters. However, its average delay is 59 minutes in both years which is one of the top 3 highest across all states. So it is expected that their delays are abnormally high at specific quarters.

Wyoming has the highest average delay out of all states across both years, however this high rate is evident in all quarters.

</run>
            <run fontcolor='#555555' fontname='Tableau Light'> It should also be noted that major weather events occured in 2019, it was an especially wet year. South Dakota and the MidWest experienced some major flooding, with some places declaring a state of emergency. This created boarding and takeoff issues, as traffic issues on land leaked into traffic struggles on air. Delays eased as Dakota went into warmer seasons. Also, North Dakota previously struggled with budget problems, creating operational deficits, which may have not been fully resolved and have caused delays (source: </run>
            <run auto-url='true' fontcolor='#555555' fontname='Tableau Light' hyperlink='tabdoc:load-url url=&amp;quot;https://www.morningagclips.com/n-d-airports-could-be-affected-by-budget/&amp;quot;'>https://www.morningagclips.com/n-d-airports-could-be-affected-by-budget/</run>
            <run fontcolor='#555555' fontname='Tableau Light'>).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Delay Identifier' datatype='string' name='[Calculation_1714464130766577664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([DepDelay] &lt;= 0) OR ISNULL([DepDelay]) THEN &quot;On-time&quot; ELSE &quot;Delayed Departure&quot; END' />
            </column>
            <column caption='DelayOnly' datatype='integer' name='[Calculation_2003820406851547136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [DepDelay]&gt;=0 THEN [DepDelay] ELSE 0 END' />
            </column>
            <column caption='Delayed Only' datatype='integer' name='[Calculation_2003820407344709642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_1714464130766577664]) = &quot;Delayed Departure&quot; THEN [DepDelay] END' />
            </column>
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2003820406851547136]' derivation='Avg' name='[avg:Calculation_2003820406851547136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2003820407344709642]' derivation='Avg' name='[avg:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='None' name='[none:Calculation_1714464130766577664:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2003820407344709642]' derivation='Avg' name='[pcdf:avg:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[FlightDate]' derivation='Quarter' name='[qr:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]'>
            <groupfilter function='member' level='[none:Calculation_1714464130766577664:nk]' member='&quot;Delayed Departure&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]'>
            <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820406851547136:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' value='144' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[qr:FlightDate:ok]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820407344709642:qk]' max='80.920000000000002' min='15.552631579' type='interpolated' />
            <encoding attr='color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:avg:Calculation_2003820407344709642:qk]' max='95.920000000000002' min='1.552631579' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820407344709642:qk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820407344709642:qk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:avg:Calculation_2003820407344709642:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</rows>
        <cols>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok] / [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[qr:FlightDate:ok])</cols>
      </table>
      <simple-id uuid='{19DA6BCA-DCF0-4A68-9106-E44D1DDDCB54}' />
    </worksheet>
    <worksheet name='2.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2.3 </run>
            <run bold='true'>Average Departure Delay per State</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>In 2018 and 2019, takes in only delayed flights. </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Similar to the previous visual, it is clear that</run>
            <run bold='true'> the highest average delays per state are Wyoming (62), North Dakota (59) and South Dakota (58.5)</run>
            <run>. West Virginia is fourth with 56 but unlike the previous 3, it only had abornally high delays in Q1 and in fact did substantially good in Q3. 
</run>
            <run bold='true'>These three states are at least 1.5x higher than the average delay across all states (35.6),</run>
            <run> which is a negative indicator, especially consider other surrounding states are often between 25-35. 
This analysis takes in the delayed flights in both 2018 and 2019 so we can get an idea if 2019 was just an abnormaly. It should be noted that this is the average of all delays, so although they have a high delay time, does not mean they may have a high number of delayed flights relative to on time flights.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Delay Identifier' datatype='string' name='[Calculation_1714464130766577664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([DepDelay] &lt;= 0) OR ISNULL([DepDelay]) THEN &quot;On-time&quot; ELSE &quot;Delayed Departure&quot; END' />
            </column>
            <column caption='Delayed Only' datatype='integer' name='[Calculation_2003820407344709642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_1714464130766577664]) = &quot;Delayed Departure&quot; THEN [DepDelay] END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2003820407344709642]' derivation='Avg' name='[avg:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='None' name='[none:Calculation_1714464130766577664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]'>
            <groupfilter function='member' level='[none:Calculation_1714464130766577664:nk]' member='&quot;Delayed Departure&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2018' />
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Country:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Longitude (generated)]' field-type='quantitative' max='33213564.439017639' min='26933515.482431516' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Latitude (generated)]' field-type='quantitative' max='7030207.7221371923' min='3208931.166049107' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820407344709642:qk]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Country:nk]' />
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' />
              <geometry column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Latitude (generated)]</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='130'>
            <formatted-text>
              <run>The highest average departure delay : Wyoming</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='27878260.962064512'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='5371220.8827590561'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='-109.56532083104852' v='43.388024579548308' />
              </visual-coordinate>
            </point>
            <body x='152' y='-56' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{EC8A8B34-8A3B-4037-82CF-4D27DF33F67B}' />
    </worksheet>
    <worksheet name='2.3 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2.3 </run>
            <run bold='true'>Average Departure Delay per State</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>

WITHOUT ANNOTATIONS
Similar to the previous visual, it is clear that</run>
            <run bold='true'> the highest average delays per state are Wyoming (62), North Dakota (59) and South Dakota (58.5)</run>
            <run>. West Virginia is fourth with 56 but unlike the previous 3, it only had abornally high delays in Q1 and in fact did substantially good in Q3. 
</run>
            <run bold='true'>These three states are at least 1.5x higher than the average delay across all states (35.6),</run>
            <run> which is a negative indicator, especially consider other surrounding states are often between 25-35. 
This analysis takes in the delayed flights in both 2018 and 2019 so we can get an idea if 2019 was just an abnormaly. It should be noted that this is the average of all delays, so although they have a high delay time, does not mean they may have a high number of delayed flights relative to on time flights.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Delay Identifier' datatype='string' name='[Calculation_1714464130766577664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([DepDelay] &lt;= 0) OR ISNULL([DepDelay]) THEN &quot;On-time&quot; ELSE &quot;Delayed Departure&quot; END' />
            </column>
            <column caption='Delayed Only' datatype='integer' name='[Calculation_2003820407344709642]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Calculation_1714464130766577664]) = &quot;Delayed Departure&quot; THEN [DepDelay] END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_2003820407344709642]' derivation='Avg' name='[avg:Calculation_2003820407344709642:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='None' name='[none:Calculation_1714464130766577664:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]'>
            <groupfilter function='member' level='[none:Calculation_1714464130766577664:nk]' member='&quot;Delayed Departure&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Country:nk]'>
            <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2018' />
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Country:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Longitude (generated)]' field-type='quantitative' max='31922821.047149155' min='27947495.37492267' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Latitude (generated)]' field-type='quantitative' max='5621219.6834639264' min='3187346.7987387404' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820407344709642:qk]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Country:nk]' />
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' />
              <geometry column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Latitude (generated)]</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4DEF9580-5E96-4759-B389-4CDD4EDDF504}' />
    </worksheet>
    <worksheet name='2.4 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2.4 </run>
            <run bold='true'>Total Cancellations by Reason per Month in 2018 and 2019</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Shows the proportion of cancellations per month split by 4 reasons</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>In 2018, the majority of the cancellations were due to weather problems (around 50% average) and the carrier was around 30%. In 2019</run>
            <run>, the carrier made up a larger proportion of the cancellations, this was especially evident in the beginning months, Q1 and Q2. 
</run>
            <run bold='true'>The average total of cancelled flights was 3k in 2018 and 4.6k in 2019. In both years, there are usually more cancellations in Q1. In july 2018, was the largest count of national air system delays</run>
            <run> compared to months in both years, in fact, in July 2019, this cancellation reason was almost half in comparison, and total cancellations were below the year&apos;s average.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Cancellation Reason' datatype='string' name='[CancellationReason]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[CancellationReason]' derivation='None' name='[none:CancellationReason:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cancelled]' derivation='Count' name='[pcdf:cnt:Cancelled:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[CancellationReason]' derivation='Count' name='[pcto:cnt:CancellationReason:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Month-Trunc' name='[tmn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:CancellationReason:nk]'>
            <groupfilter from='&quot;Carrier&quot;' function='range' level='[none:CancellationReason:nk]' to='&quot;Weather&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2018' />
              <groupfilter function='member' level='[yr:FlightDate:ok]' member='2019' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:CancellationReason:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' scope='rows' value='Cancelled Flights' />
            <format attr='height' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok]' value='63' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok]' value='bold' />
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' value='bold' />
            <format attr='font-size' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' value='11' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:Cancelled:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:CancellationReason:nk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:CancellationReason:qk:2]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:Cancelled:qk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</rows>
        <cols>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok] / [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='2' text-width='148'>
            <formatted-text>
              <run bold='true'>Highest total cancellations due to weather</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:CancellationReason:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:Cancelled:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:CancellationReason:qk:2]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Weather&quot;</value>
                    <value>4910</value>
                    <value>#2018-03-01 00:00:00#</value>
                    <value>2018</value>
                    <value>%null%</value>
                    <value>0.87662917336189972</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='173' y='-21' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='152'>
            <formatted-text>
              <run>Usually fewer flights in February, so fewer cancellations</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.459459'>
                  <node-reference>
                    <fields>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>2018</bucket>
                      <bucket>#2018-02-01 00:00:00#</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2663.7560975609754'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='60' y='-81' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='212'>
            <formatted-text>
              <run bold='true'>Highest total of carrier cancellations</run>
              <run> in all months and relative to other other reasons</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:CancellationReason:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[tmn:FlightDate:ok]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:Cancelled:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:CancellationReason:qk:2]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Carrier&quot;</value>
                    <value>5375</value>
                    <value>#2019-03-01 00:00:00#</value>
                    <value>2019</value>
                    <value>8.5301418439716308</value>
                    <value>0.75928803503319675</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='242' y='19' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{4026966A-B160-4F94-A4B7-0917DCE43D37}' />
    </worksheet>
    <worksheet name='3.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3.1 </run>
            <run bold='true'>Average Distance VS. Flight Time per Airport</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>A scatterplot of each US airport by their distance (miles) and flight time (minutes)</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>According to the trend line, it seems that</run>
            <run bold='true'> flights that are of higher distances, often are above the trend line,</run>
            <run> suggesting that there is a lower distance:flight time ratio, relative to other flights. However, since they are higher distances, while shorter flights allocate more time to starting / landing in their total airtime, longer flights spend it gliding in air. </run>
            <run bold='true'>This also suggests John F Intl takes a longer time to fly given their distance , it could indicate that they are inefficient. </run>
            <run>Æ&#10;</run>
            <run bold='true'>Flight time is often correlated with distance, which explains why the longest flight times and distances are for flights to airports in Hawaii</run>
            <run>, as the state is on an island. California also has airports clustered around the middle average of flights vs distance, however they have a high number of different airports, hence why it appears more prevalent.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
            <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[AirTime]' derivation='Avg' name='[avg:AirTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Min' name='[min:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirportName]' derivation='None' name='[none:AirportName:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[min:Distance:qk]' included-values='in-range'>
            <min>83.0</min>
            <max>1533.0</max>
          </filter>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[min:Distance:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]' scope='rows' value='Average Distance (miles)' />
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]' scope='cols' value='Average Air Time (minutes)' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' />
              <size column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear'>
              <excluded-factors>
                <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</column>
              </excluded-factors>
            </trendline>
            <reference-line axis-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]' z-order='1' />
            <reference-line axis-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.022099494934082' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Hawaiian Airports</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='220.95239398991504'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2817.3563049758686'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='254.55732083248765'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2464.4515486114592'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='118'>
            <formatted-text>
              <run bold='true'>Abnormally low distance to flight time ratio</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Distance:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>225.41391405711863</value>
                    <value>1628.798660317128</value>
                    <value>&quot;John F. Kennedy International&quot;</value>
                    <value>&quot;New York&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='142' y='117' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{500AB8DD-C6FB-44D8-A17F-EFEC7643F1BF}' />
    </worksheet>
    <worksheet name='3.2 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3.2 </run>
            <run bold='true'>Total Distance and Number of Planes per Airline</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Compares the difference in number of planes and distance from 2018 to 2019</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>Delta Airlines increased the number of planes they have the most</run>
            <run>, by 4.4% from 2018  to 2019, Southwest has the lowest number of planes in 2018 and increased the least (by 0.4%). </run>
            <run bold='true'>Southwest also travelled a lower number of miles/ distancce from 2018 to 2019, as it decreased this number by -0.125%. However, they&apos;re still in the lead for total distance when compared to the other airlines.</run>
            <run> When combined with the graph from 1.2, this could mean that they are taking on more shorter distance flights, this is verified by graph 1.3 as they take the lead for total number of flights relative to other airlines.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column caption='Tail Number' datatype='string' name='[Tail_Number]' role='dimension' type='nominal' />
            <column-instance column='[Tail_Number]' derivation='CountD' name='[ctd:Tail_Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tail_Number]' derivation='CountD' name='[pcdf:ctd:Tail_Number:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Distance]' derivation='Sum' name='[pcdf:sum:Distance:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]' scope='rows' value='Total Number of Planes' />
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]' scope='rows' value='Distance (miles)' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' value='bold' />
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' value='bold' />
            <format attr='font-size' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' value='11' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:ctd:Tail_Number:qk]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Distance:qk]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk] + [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk])</rows>
        <cols>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk] / [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok])</cols>
      </table>
      <simple-id uuid='{324F19DB-0CBE-45C9-9923-FFA1F2883938}' />
    </worksheet>
    <worksheet name='3.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>3.3 </run>
            <run bold='true'>Average Distance per Plane by Airline</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Includes total distance (miles) and number of planes</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run bold='true'>Southwest is below the airline average for total number of planes, but when compared to the average distanceper plane, it is far above the other 2 airlines. This may indicate that it the most efficient </run>
            <run>out of thte other two carriers a they are fully utilizing their fleet, and maximizing the utility out of each. This saves them money on buying new planes that wont be fully utilized, which may be a negative indicator for Delta. Each airplane added to a fleet is extremely expensive, considering its maintenance, storage, and staff costs.</run>
            <run bold='true'> So to minimize the number of planes while maximizing distance (avg distance per plane) prove efficiency of cost allocation.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column caption='Average Distance per Plane' datatype='real' name='[Calculation_2003820407262175235]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Distance])/COUNTD([Tail_Number])' />
            </column>
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column caption='Tail Number' datatype='string' name='[Tail_Number]' role='dimension' type='nominal' />
            <column-instance column='[Tail_Number]' derivation='CountD' name='[ctd:Tail_Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Distance]' derivation='Sum' name='[sum:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2003820407262175235]' derivation='User' name='[usr:Calculation_2003820407262175235:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]' value='116' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]' value='116' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]' value='116' />
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]' scope='rows' value='Total Distance (miles)' />
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]' scope='rows' value='Total Number of Planes' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' id='refline2' value='on' />
            <format attr='line-pattern-only' id='refline2' value='dotted' />
            <format attr='line-visibility' id='refline1' value='on' />
            <format attr='line-pattern-only' id='refline1' value='dotted' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk] + ([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk] + [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]))</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='118'>
            <formatted-text>
              <run fontalignment='1'>Least planes for the most distance</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.630435'>
                  <node-reference>
                    <fields>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1336231.6041592215'>
                  <node-reference>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-25' y='5' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='112'>
            <formatted-text>
              <run>Least efficient</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[ctd:Tail_Number:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Distance:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[usr:Calculation_2003820407262175235:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>988</value>
                    <value>&quot;Delta Air Lines Inc.&quot;</value>
                    <value>1731686703.0</value>
                    <value>1752719.335020243</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='3' y='43' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{89B3E3D1-F876-4410-9210-74D046626A17}' />
    </worksheet>
    <worksheet name='4.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Cancellations and On-time/Delayed Flights per State</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>This shows the correlation between cancellations and flights. California, Florida, and Georgia show unusually low cancellations relative to their number of total flights. The opposite goes for Illinois, Maryland, And Massachusets - which indicates that airports in these States may suffer from operational difficulties due to their high cancellation: flight ratio. 
Another poor indicator for Illinois is that it suffers from the highest Delayed:Ontime departure ratio, with 49% of flights being delayed. Runner ups include Nevada and Texas. Given that Chicago&apos;s midway airport is one of the biggest in Illinois, it accounts for many if not most of their flights, it should be noted that they are consistently rated the worst airport in america, with the highest delay rates of all airports (source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.cnbc.com/2018/12/12/magnify-money-study-best-and-worst-us-airports-for-holiday-travel.html&amp;quot;'>https://www.cnbc.com/2018/12/12/magnify-money-study-best-and-worst-us-airports-for-holiday-travel.html</run>
            <run>). &#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Number of States_' datatype='integer' name='[Taxi In Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range max='50' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Delay Identifier' datatype='string' name='[Calculation_1714464130766577664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([DepDelay] &lt;= 0) OR ISNULL([DepDelay]) THEN &quot;On-time&quot; ELSE &quot;Delayed Departure&quot; END' />
            </column>
            <column caption='DelayOnly' datatype='integer' name='[Calculation_2003820406851547136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [DepDelay]&gt;=0 THEN [DepDelay] ELSE 0 END' />
            </column>
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='Count' name='[cnt:Calculation_1714464130766577664:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='None' name='[none:Calculation_1714464130766577664:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[pcdf:sum:Cancelled:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1714464130766577664]' derivation='Count' name='[pcto:cnt:Calculation_1714464130766577664:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2003820406851547136]' derivation='Sum' name='[sum:Calculation_2003820406851547136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]'>
            <groupfilter count='[Parameters].[Taxi In Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Cancelled])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]'>
            <groupfilter function='level-members' level='[yr:FlightDate:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='71' />
            <format attr='height' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' value='53' />
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]' field-type='quantitative' max='826154' min='23676' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='71' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='bold' />
            <format attr='font-size' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='11' />
            <format attr='color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='#e15759' />
            <format attr='text-align' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='center' />
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='bold' />
            <format attr='font-size' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='11' />
            <format attr='color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='#e15759' />
            <format attr='text-align' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:Calculation_1714464130766577664:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk] + [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk])</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[attr:Calculation_1714464130766577664:nk]</column>
          </partitionable-measures>
        </table-calculations>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>High Delays relative to cancellations</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Georgia&quot;</value>
                    <value>6348264</value>
                    <value>3205</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='99'>
            <formatted-text>
              <run bold='true'>Abnormally low delays</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Massachusetts&quot;</value>
                    <value>1505325</value>
                    <value>2776</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='29' y='-68' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Lower than normal delay rates</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;On-time&quot;</value>
                    <value>&quot;Illinois&quot;</value>
                    <value>8599</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='88' y='-151' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Abnormally high cancellations relative to flights. Airports with the most bad reviews.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>158186</value>
                    <value>&quot;Delayed Departure&quot;</value>
                    <value>&quot;Illinois&quot;</value>
                    <value>137</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='81' y='-252' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Lower cancellations relative to total flights</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>385838</value>
                    <value>&quot;On-time&quot;</value>
                    <value>&quot;Georgia&quot;</value>
                    <value>3168</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='186' y='-100' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{58D12B8C-ABEA-411B-A70B-160A96558861}' />
    </worksheet>
    <worksheet name='4.1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>State Cancellations VS. Flights</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>WITHOUT ANNOTATIONS
This shows the correlation between cancellations and flights. California, Florida, and Georgia show unusually low cancellations relative to their number of total flights. The opposite goes for Illinois, Maryland, And Massachusets - which indicates that airports in these States may suffer from operational difficulties due to their high cancellation: flight ratio. 
Another poor indicator for Illinois is that it suffers from the highest Delayed:Ontime departure ratio, with 49% of flights being delayed. Runner ups include Nevada and Texas. Given that Chicago&apos;s midway airport is one of the biggest in Illinois, it accounts for many if not most of their flights, it should be noted that they are consistently rated the worst airport in america, with the highest delay rates of all airports (source: </run>
            <run auto-url='true' hyperlink='tabdoc:load-url url=&amp;quot;https://www.cnbc.com/2018/12/12/magnify-money-study-best-and-worst-us-airports-for-holiday-travel.html&amp;quot;'>https://www.cnbc.com/2018/12/12/magnify-money-study-best-and-worst-us-airports-for-holiday-travel.html</run>
            <run>). &#10;</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Number of States_' datatype='integer' name='[Taxi In Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
              <calculation class='tableau' formula='15' />
              <range max='50' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Delay Identifier' datatype='string' name='[Calculation_1714464130766577664]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF ([DepDelay] &lt;= 0) OR ISNULL([DepDelay]) THEN &quot;On-time&quot; ELSE &quot;Delayed Departure&quot; END' />
            </column>
            <column caption='DelayOnly' datatype='integer' name='[Calculation_2003820406851547136]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [DepDelay]&gt;=0 THEN [DepDelay] ELSE 0 END' />
            </column>
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='integer' name='[DepDelay]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='Count' name='[cnt:Calculation_1714464130766577664:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1714464130766577664]' derivation='None' name='[none:Calculation_1714464130766577664:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[pcdf:sum:Cancelled:qk:1]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1714464130766577664]' derivation='Count' name='[pcto:cnt:Calculation_1714464130766577664:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_2003820406851547136]' derivation='Sum' name='[sum:Calculation_2003820406851547136:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]'>
            <groupfilter count='[Parameters].[Taxi In Parameter]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Cancelled])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]'>
            <groupfilter function='level-members' level='[yr:FlightDate:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='53' />
            <format attr='height' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' value='53' />
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]' field-type='quantitative' max='590445' min='137467' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' field-type='quantitative' fold='true' max='10897' min='2188' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='71' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]' value='53' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='bold' />
            <format attr='font-size' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='11' />
            <format attr='color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='#e15759' />
            <format attr='text-align' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' value='center' />
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='bold' />
            <format attr='font-size' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='11' />
            <format attr='color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='#e15759' />
            <format attr='text-align' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f7f7f0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:Calculation_1714464130766577664:qk:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:sum:Cancelled:qk:1]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:Calculation_1714464130766577664:qk] + [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk])</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[attr:Calculation_1714464130766577664:nk]</column>
          </partitionable-measures>
        </table-calculations>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>High Delays relative to cancellations</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Georgia&quot;</value>
                    <value>6348264</value>
                    <value>3205</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='99'>
            <formatted-text>
              <run bold='true'>Abnormally low delays</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Calculation_2003820406851547136:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Massachusetts&quot;</value>
                    <value>1505325</value>
                    <value>2776</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='29' y='-68' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>Lower than normal delay rates</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;On-time&quot;</value>
                    <value>&quot;Illinois&quot;</value>
                    <value>8599</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='88' y='-151' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{26108825-40B7-4D44-AED7-9D649C6DE46A}' />
    </worksheet>
    <worksheet name='Q1.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1.1 </run>
            <run bold='true'>Total Flights between 2018 - 2019 by Airline</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Counts the number of successful flights for each airline, compares yearly change in total flights.</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#333333' fontname='Tableau Light' fontsize='10' italic='true'>Counts the number of arrival times to exclude cancelled or null values</run>
            <run>

Southwest Airlines shows a minimum of 1.4x total count in number of flights compared to the two other airlines, in both 2018 and 2019. However, their year over year change has decreased by </run>
            <run bold='true' underline='true'>-0.29%</run>
            <run>, whereas</run>
            <run bold='true' underline='true'> American Airlines increased by 2.7% </run>
            <run>and</run>
            <run bold='true' underline='true'> Delta by 4.7%. </run>
            <run>

This may indicate that although they have lower total flights, they are increasing their demand with time - a positive indicator for them.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Arr Time' datatype='string' default-role='measure' default-type='quantitative' name='[ArrTime]' role='dimension' type='nominal' />
            <column caption='Valid Flights' datatype='integer' name='[Calculation_1894326642316476426]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Cancelled] = 0 AND NOT ISNULL([ArrTime]) THEN 1 ELSE 0 END' />
            </column>
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[ArrTime]' derivation='Count' name='[cnt:ArrTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1894326642316476426]' derivation='None' name='[none:Calculation_1894326642316476426:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrTime]' derivation='Count' name='[pcdf:cnt:ArrTime:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]' included-values='in-range-or-null'>
            <min>0</min>
            <max>1</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' member-value='2018' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' scope='cols' value='Total Flights' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' value='#f3faf9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' value='bold' />
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f2f6f7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:ArrTime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</rows>
        <cols>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok] * [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk])</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='126'>
            <formatted-text>
              <run fontcolor='#787878'>% change in total flights compared to 2018: </run>
              <run bold='true'><![CDATA[<[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:ArrTime:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:ArrTime:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>990073</value>
                    <value>&quot;Delta Air Lines Inc.&quot;</value>
                    <value>2019</value>
                    <value>0.046980582585872517</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='144' y='29' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='148'>
            <formatted-text>
              <run>Decreased change in total flights compared to 2018 by -0.293%</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='116531.47845468053'>
                  <node-reference>
                    <fields>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>2019</bucket>
                    </multibucket>
                    <axis>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.443005'>
                  <node-reference>
                    <fields>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Southwest Airlines Co.&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-129' y='67' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1F2F1423-3287-48A9-8E11-1780BB3232CA}' />
    </worksheet>
    <worksheet name='Q1.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1.2 </run>
            <run bold='true'>Monthly Total Flights Among Carriers </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Calculates the percent change compared to the previous month and year. </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>February appears to be the month where all 3 airlines experience the lowest number of flights. in February 2018,</run>
            <run bold='true'> American Airlines decreased by -6.4%, Delta -5%, and Southwest -11.5.</run>
            <run> In February 2019, American airlines -7%, Delta -8.5%, Southwest -11.6%. Surprisingly, American Airlines suffered the biggest loss in 2018 relative to other airlines, and while other airlines suffered more in 2019 relative to their previous year 2018, Southwest barely decreased more in 2019 relative to its previous year.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Arr Time' datatype='string' default-role='measure' default-type='quantitative' name='[ArrTime]' role='dimension' type='nominal' />
            <column caption='Valid Flights' datatype='integer' name='[Calculation_1894326642316476426]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Cancelled] = 0 AND NOT ISNULL([ArrTime]) THEN 1 ELSE 0 END' />
            </column>
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[ArrTime]' derivation='Count' name='[cnt:ArrTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Month' name='[mn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1894326642316476426]' derivation='None' name='[none:Calculation_1894326642316476426:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrTime]' derivation='Count' name='[pcdf:cnt:ArrTime:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[ArrTime]' derivation='Count' name='[pcdf:cum:cnt:ArrTime:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' level-break='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[qr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='CumTotal' />
              <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[FlightDate]' derivation='Quarter' name='[qr:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]' value='120' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cum:cnt:ArrTime:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:ArrTime:qk:9]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' value='Total Flights'>
              <formatted-text>
                <run>Total Flights</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cum:cnt:ArrTime:qk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:ArrTime:qk:9]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok] / [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok])</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</cols>
      </table>
      <simple-id uuid='{39AC2572-7B29-43D1-A7D3-7297F6DC4021}' />
    </worksheet>
    <worksheet name='Q1.2 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1.2 </run>
            <run bold='true'>Monthly Total Flights Among Carriers </run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Calculates the percent change compared to the previous month and year. </run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>February appears to be the month where all 3 airlines experience the lowest number of flights. in February 2018,</run>
            <run bold='true'> American Airlines decreased by -6.4%, Delta -5%, and Southwest -11.5.</run>
            <run> In February 2019, American airlines -7%, Delta -8.5%, Southwest -11.6%. Surprisingly, American Airlines suffered the biggest loss in 2018 relative to other airlines, and while other airlines suffered more in 2019 relative to their previous year 2018, Southwest barely decreased more in 2019 relative to its previous year.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Arr Time' datatype='string' default-role='measure' default-type='quantitative' name='[ArrTime]' role='dimension' type='nominal' />
            <column caption='Valid Flights' datatype='integer' name='[Calculation_1894326642316476426]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Cancelled] = 0 AND NOT ISNULL([ArrTime]) THEN 1 ELSE 0 END' />
            </column>
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[ArrTime]' derivation='Count' name='[cnt:ArrTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Month' name='[mn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1894326642316476426]' derivation='None' name='[none:Calculation_1894326642316476426:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrTime]' derivation='Count' name='[pcdf:cnt:ArrTime:qk:9]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[ArrTime]' derivation='Count' name='[pcdf:cum:cnt:ArrTime:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' level-break='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[qr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='CumTotal' />
              <table-calc diff-options='Relative' level-address='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' ordering-field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[FlightDate]' ordering-type='Field' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[FlightDate]' derivation='Quarter' name='[qr:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cum:cnt:ArrTime:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:ArrTime:qk:9]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cnt:ArrTime:qk:9]' />
              <lod column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcdf:cum:cnt:ArrTime:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</rows>
        <cols>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok] / [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok])</cols>
      </table>
      <simple-id uuid='{443DF564-DFA1-4821-B3C7-5EACDD903457}' />
    </worksheet>
    <worksheet name='Q1.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>1.3  </run>
            <run bold='true'>Most Utilized Airports Among the Carriers</run>
            <run>Æ&#10;</run>
            <run fontsize='10'>Includes the proportion of flights per airport split by the different airlines</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>The count of flights for each popular Airport Name split by airline name shows that </run>
            <run bold='true'>Hartsfield is the most popular destination </run>
            <run>/ experiences the most traffic</run>
            <run bold='true'>. Delta Airlines dominates the number of flights at this airport by taking up 80% of total flights</run>
            <run>, however this is not the case at other airports as there are far less.

</run>
            <run bold='true'>The top ten airports are Hartsfield, Dallas Intl, Phoenix Sky Intl, LAX, Charlottle douglas, Harry Reid, Denver Intl, Baltimore/Washington, Minneapolis-St.Paul, and Chicago Midwest</run>
            <run>. One key note is that they are </run>
            <run bold='true'>all international airports</run>
            <run> by densely populated cities.

Southwest is consistent in the number of flights at each airport, averaging around 100k for the top 10 airports. </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Air Time' datatype='integer' name='[AirTime]' role='measure' type='quantitative' />
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column caption='Airport Name' datatype='string' name='[AirportName]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Arr Time' datatype='string' default-role='measure' default-type='quantitative' name='[ArrTime]' role='dimension' type='nominal' />
            <column caption='Valid Flights' datatype='integer' name='[Calculation_1894326642316476426]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Cancelled] = 0 AND NOT ISNULL([ArrTime]) THEN 1 ELSE 0 END' />
            </column>
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column-instance column='[AirTime]' derivation='Count' name='[cnt:AirTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrTime]' derivation='Count' name='[cnt:ArrTime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[AirportName]' derivation='None' name='[none:AirportName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1894326642316476426]' derivation='None' name='[none:Calculation_1894326642316476426:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ArrTime]' derivation='Count' name='[pcto:cnt:ArrTime:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([AirTime])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:AirportName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</column>
            <column>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' scope='rows' value='Total Flights' />
            <format attr='height' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]' value='38' />
            <format attr='width' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='size-bar' field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:ArrTime:qk:2]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f3faf9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' />
              <tooltip column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:ArrTime:qk:2]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:AirTime:qk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</rows>
        <cols>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='222'>
            <formatted-text>
              <run bold='true'>American Airlines dominates the Dallas/ Fort Worth Airport by taking 94% of total flights</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:AirTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:ArrTime:qk:2]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>290541</value>
                    <value>291114</value>
                    <value>&quot;American Airlines Inc.&quot;</value>
                    <value>&quot;Dallas/Fort Worth International&quot;</value>
                    <value>0.94446391030133148</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='211' y='-33' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='219'>
            <formatted-text>
              <run bold='true'>Hartsfield Jackson has almost 2x the amount of traffic compared to the next most popular airport</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:AirTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:ArrTime:qk:2]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>486939</value>
                    <value>487845</value>
                    <value>&quot;Delta Air Lines Inc.&quot;</value>
                    <value>&quot;Hartsfield-Jackson Atlanta International&quot;</value>
                    <value>0.82366179966502784</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='169' y='34' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='202'>
            <formatted-text>
              <run bold='true'>Southwest often takes a consistent percentage of total flights in mid-traffic airports</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:AirTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirportName:nk]</field>
                      <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[pcto:cnt:ArrTime:qk:2]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>155154</value>
                    <value>155449</value>
                    <value>&quot;Southwest Airlines Co.&quot;</value>
                    <value>&quot;Chicago Midway International&quot;</value>
                    <value>0.97314978276928465</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-99' y='-121' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{67A45952-4C91-4FB7-BB59-855DE3778AFC}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='flights+ (airtraffic)' name='federated.0lgy1ft0cytrc71fyh1co0e7xp2x' />
          </datasources>
          <datasource-dependencies datasource='federated.0lgy1ft0cytrc71fyh1co0e7xp2x'>
            <column caption='Airline Name' datatype='string' name='[AirlineName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cancelled]' role='measure' type='quantitative' />
            <column caption='Flight Date' datatype='date' name='[FlightDate]' role='dimension' type='ordinal' />
            <column-instance column='[FlightDate]' derivation='Month' name='[mn:FlightDate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[AirlineName]' derivation='None' name='[none:AirlineName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cancelled]' derivation='Sum' name='[sum:Cancelled:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FlightDate]' derivation='Year' name='[yr:FlightDate:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' />
              <text column='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[sum:Cancelled:qk]</rows>
        <cols>([federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok] / [federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[mn:FlightDate:ok])</cols>
      </table>
      <simple-id uuid='{393D9726-FBF9-4341-8A5D-956EE2074A68}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1 (2)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Number of States_' datatype='integer' name='[Taxi In Parameter]' param-domain-type='range' role='measure' type='quantitative' value='15'>
          <calculation class='tableau' formula='15' />
          <range max='50' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='70' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='53' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
                <zone h='52500' id='51' name='2.4 (2)' w='98400' x='800' y='46500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#f0f7fa' />
                  </zone-style>
                </zone>
                <zone h='45500' id='68' name='2.3 (2)' w='53698' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38750' id='72' name='4.1 (2)' w='44702' x='54498' y='7750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6750' id='75' mode='slider' param='[Parameters].[Taxi In Parameter]' type-v2='paramctrl' w='44702' x='54498' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='85' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='84' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='45500' id='68' is-fixed='true' name='2.3 (2)' w='53698' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6750' id='75' mode='slider' param='[Parameters].[Taxi In Parameter]' type-v2='paramctrl' w='44702' x='54498' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38750' id='72' is-fixed='true' name='4.1 (2)' w='44702' x='54498' y='7750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52500' id='51' is-fixed='true' name='2.4 (2)' w='98400' x='800' y='46500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f0f7fa' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{645305B0-16D2-45D8-9ECD-26475148B4F9}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='589' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone fixed-size='180' h='18672' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='75311' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='23859'>
              <flipboard active-id='11' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='1.1 Counts the number of arrival times to exclude cancelled or null values&#10;&#10;Southwest Airlines shows a minimum of 1.4x total count in number of flights compared to the two other airlines, in both 2018 and 2019. However, their year over year change has decreased by -0.29%, whereas American Airlines increased by 2.7% and Delta by 4.7%. &#10;&#10;This may indicate that although they have lower total flights, they are increasing their demand with time - a positive indicator for them.' captured-sheet='Q1.1' id='1' />
                  <story-point caption='1.2 February appears to be the month where all 3 airlines experience the lowest number of flights. in February 2018, American Airlines decreased by -6.4%, Delta -5%, and Southwest -11.5. In February 2019, American airlines -7%, Delta -8.5%, Southwest -11.6%. Surprisingly, American Airlines suffered the biggest loss in 2018 relative to other airlines, and while other airlines suffered more in 2019 relative to their previous year 2018, Southwest barely decreased more in 2019 relative to its previous year.' captured-sheet='Q1.2' id='2' />
                  <story-point caption='1.3 The count of flights for each popular Airport Name split by airline name shows that Hartsfield is the most popular destination / experiences the most traffic. Delta Airlines dominates the number of flights at this airport by taking up 80% of total flights, however this is not the case at other airports as there are far less.&#10;&#10;The top ten airports are Hartsfield, Dallas Intl, Phoenix Sky Intl, LAX, Charlottle douglas, Harry Reid, Denver Intl, Baltimore/Washington, Minneapolis-St.Paul, and Chicago Midwest. One key note is that they are all international airports by densely populated cities.&#10;&#10;Southwest is consistent in the number of flights at each airport, averaging around 100k for the top 10 airports. ' captured-sheet='Q1.3' id='3' />
                  <story-point caption='2.1 September has the highest number of on time flights and June has the highest number of delayed flights. However those are both months with a high number of flights. The highest ratio of on time : delayed is September at 7:3, for the highest amount of delayed relative to on time (delayed : on-time) is 55:45 in June. Overall, most flights are on time, with more flights being on time around the fall months (Aug - Nov).' captured-sheet='2.1' id='4' />
                  <story-point caption='2.2 The states that have the highest delay are North Dakota (91.0 in Q1), West Virginia (87.75 in Q1), and Wyoming (84.66 in Q1).  Considering these are major airports with at least 1.1x more flights during Q1 than other quarters, the strain on their airport system can cause substantial delays. &#10;It is also known that North/South Dakota experiences severe storms every winter, which could explain the high delays,  especially relative to its other quarters. However, its average delay is 59 minutes in both years which is one of the top 3 highest across all states. So it is expected that their delays are abnormally high at specific quarters.&#10;Wyoming has the highest average delay out of all states across both years, however this high rate is evident in all quarters. It should also be noted that major weather events occured in 2019, it was an especially wet year. South Dakota and the MidWest experienced some major flooding, with some places declaring a state of emergency. This created boarding and takeoff issues, as traffic issues on land leaked into traffic struggles on air. Delays eased as Dakota went into warmer seasons. Also, North Dakota previously struggled with budget problems, creating operational deficits, which may have not been fully resolved and have caused delays (source: https://www.morningagclips.com/n-d-airports-could-be-affected-by-budget/).' captured-sheet='2.2' id='5' />
                  <story-point caption='2. 3 Similar to the previous visual, it is clear that the highest average delays per state are Wyoming (62), North Dakota (59) and South Dakota (58.5). West Virginia is fourth with 56 but unlike the previous 3, it only had abornally high delays in Q1 and in fact did substantially good in Q3. &#10;These three states are at least 1.5x higher than the average delay across all states (35.6), which is a negative indicator, especially consider other surrounding states are often between 25-35. &#10;This analysis takes in the delayed flights in both 2018 and 2019 so we can get an idea if 2019 was just an abnormaly. It should be noted that this is the average of all delays, so although they have a high delay time, does not mean they may have a high number of delayed flights relative to on time flights.' captured-sheet='2.3' id='6' />
                  <story-point caption='2.4 In 2018, the majority of the cancellations were due to weather problems (around 50% average) and the carrier was around 30%. In 2019, the carrier made up a larger proportion of the cancellations, this was especially evident in the beginning months, Q1 and Q2. &#10;The average total of cancelled flights was 3k in 2018 and 4.6k in 2019. In both years, there are usually more cancellations in Q1. In july 2018, was the largest count of national air system delays compared to months in both years, in fact, in July 2019, this cancellation reason was almost half in comparison, and total cancellations were below the year&apos;s average.' captured-sheet='2.4 (2)' id='7' />
                  <story-point caption='3.1 According to the trend line, it seems that flights that are of higher distances, often are above the trend line, suggesting that there is a lower distance:flight time ratio, relative to other flights. However, since they are higher distances, while shorter flights allocate more time to starting / landing in their total airtime, longer flights spend it gliding in air. This also suggests John F Intl takes a longer time to fly given their distance , it could indicate that they are inefficient. &#10;&#10;Flight time is often correlated with distance, which explains why the longest flight times and distances are for flights to airports in Hawaii, as the state is on an island. California also has airports clustered around the middle average of flights vs distance, however they have a high number of different airports, hence why it appears more prevalent.' captured-sheet='3.1' id='8' />
                  <story-point caption='3. 2 Delta Airlines increased the number of planes they have by 4.4% from 2018  to 2019, Southwest has the lowest number of planes in 2018 and also increased the least (by 0.4%). &#10;Southwest also travelled a lower number of miles/ distancce from 2018 to 2019, as it decreased this number by -0.125%. However, they&apos;re still in the lead for total distance when compared to the other airlines. When combined with the graph from 1.2, this could mean that they are taking on more shorter distance flights, this is verified by graph 1.3 as they take the lead for total number of flights relative to other airlines.' captured-sheet='3.2 (2)' id='9' />
                  <story-point caption='3.3 Southwest is below the airline average for total number of planes, but when compared to the average distanceper plane, it is far above the other 2 airlines. This may indicate that it the most efficient out of thte other two carriers a they are fully utilizing their fleet, and maximizing the utility out of each. This saves them money on buying new planes that wont be fully utilized, which may be a negative indicator for Delta. Each airplane added to a fleet is extremely expensive, considering its maintenance, storage, and staff costs. So to minimize the number of planes while maximizing distance (avg distance per plane) prove efficiency of cost allocation.' captured-sheet='3.3' id='10' />
                  <story-point caption='This shows the correlation between cancellations and flights. California, Florida, and Georgia show unusually low cancellations relative to their number of total flights. The opposite goes for Illinois, Maryland, And Massachusets - which indicates that airports in these States may suffer from operational difficulties due to their high cancellation: flight ratio. &#10;Another poor indicator for Illinois is that it suffers from the highest Delayed:Ontime departure ratio, with 49% of flights being delayed. Runner ups include Nevada and Texas. Given that Chicago&apos;s midway airport is one of the biggest in Illinois, it accounts for many if not most of their flights, it should be noted that they are consistently rated the worst airport in america, with the highest delay rates of all airports (source: https://www.cnbc.com/2018/12/12/magnify-money-study-best-and-worst-us-airports-for-holiday-travel.html). &#10;' captured-sheet='4.1' id='11' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{A13A3361-69AD-47FC-BE82-8769E44FDA30}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' name='Q1.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='152'>
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{2CC87C8F-FE3C-4B5A-B1C7-D1DD28237DEA}' />
    </window>
    <window class='worksheet' name='Q1.2'>
      <cards>
        <edge name='left'>
          <strip size='174'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[cnt:ArrTime:qk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{10BF8B5C-BFBA-4E9E-8A30-30FC62C1C6D5}' />
    </window>
    <window class='worksheet' name='Q1.3'>
      <cards>
        <edge name='left'>
          <strip size='145'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='129'>
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1894326642316476426:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E777A539-94BA-4269-824B-7421B908F1B7}' />
    </window>
    <window class='worksheet' name='2.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
      <simple-id uuid='{B72C2146-28CE-4217-A5BC-97CCFA671B0D}' />
    </window>
    <window class='worksheet' name='2.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' type='filter' />
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:Calculation_2003820407344709642:qk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{2ABCC221-B2B7-484D-8644-511E01532D28}' />
    </window>
    <window class='worksheet' name='2.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='104'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C89C7901-C784-4B92-B0A8-E0D6B80F24B3}' />
    </window>
    <window class='worksheet' name='2.4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='129'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:CancellationReason:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02F2A36F-88E7-40E9-81C4-BF8C52FED12A}' />
    </window>
    <window class='worksheet' name='3.1'>
      <cards>
        <edge name='left'>
          <strip size='140'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[avg:AirTime:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='126'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{93233BFA-FD4D-43D9-BF2E-BB9F337E1B24}' />
    </window>
    <window class='worksheet' name='3.2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{A4AA8710-B8F3-4CBC-912B-7BDE11FE5F65}' />
    </window>
    <window class='worksheet' name='3.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{9BEA0CBD-D75F-45D7-979B-8C20115BEF46}' />
    </window>
    <window class='dashboard' name='Dashboard 1 (2)'>
      <viewpoints>
        <viewpoint name='2.3 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2.4 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='4.1 (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='72' />
      <simple-id uuid='{A022365E-E303-4136-9B3A-30F530A33936}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{DCD3AF0A-ECC1-4C47-9BA9-C00A7764A0FE}' />
    </window>
    <window class='worksheet' maximized='true' name='4.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Taxi In Parameter]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[:Measure Names]</field>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</field>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{544AF0AA-4033-46F4-B2C9-A32D0D69FAC2}' />
    </window>
    <window class='worksheet' name='4.1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Taxi In Parameter]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[:Measure Names]</field>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:Calculation_1714464130766577664:nk]</field>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{39A85189-4F2A-49E7-BEA1-290C8E47D339}' />
    </window>
    <window class='worksheet' name='Q1.2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='173'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight field='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{24356371-A392-4AD6-81A1-F7DF236710C6}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:AirlineName:nk]</field>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AAF5CD08-794B-4E1D-B8D2-CCAC9B803C7D}' />
    </window>
    <window class='worksheet' name='2.3 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[none:State:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lgy1ft0cytrc71fyh1co0e7xp2x].[yr:FlightDate:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05AB0989-1256-49A2-AAF9-4A19D3B08BAE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='2.3' width='192'>
      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
      o/h/RONPPAZLibUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='2.3 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29aWwkV54n9ntx551MHsWbxbpZd6l0ttRqSdOSunu2Z3rGM8bCXoxhL7D2
      emAD+8H2Yj8t/MUw/M2A4Q9e2IOFvYY9hu3x7vbcMz3dLZWkUpVKKtXFulhVvJkk886M8/lD
      MoLBzIjMiMjIZJKqH0QVmRnx3ot4//97//uRxX/9byhdXkE73CcqFo5TgLV9SHb+R2nb+51g
      lAx8b1FAmmGcL/DaLPHRqVObfu432/B7zw40SvE34hBqsZFgDQQFgfXshCGgDXNG0PzZnns7
      6pqAmp1T60NAKePU3AkIkWhnHbTqmzAgAAxqOI6Mo8sroPPz7VvSFTzgdZAk6fiFmNC2dFy6
      LyHFsu0vPiTQKcWjWBXFAb53feo6KKVgd94zy7KglIJSCsMwwDAMNE0Dx3GO9xMS0oQDe5ms
      to301AyibgtgqHDuw/mJHXCKFaDeVrDFGHg2QrF9jIAEGDelFAQEDMsA0D0v8i8RDAzDgFIK
      TdMA1JlB0zTrc8MwwHEcDMOAoigQBKGpDUppaExASIudpgtwGzshBJVCzoUtHEAAnCM8vk8l
      /MYyD7YU4CEMIH3bwOxNCqrQuvTkv5VDhTBXVyeYKz0hxNoJgDojGIZh7QYMw4RK5J18HxbM
      Z3ViOEopeCninQGAuixHAIyxHCJZl2sIAeOypZECxYd5CT+qRRBbqK9ItDfvom/Q+LjdXg2X
      7l7D428+RbkqY3vxNp7d/QI1RYMoiuCMEh59/Su8eHgPhAHWH95ALl/quE8vz9RNJjCZvh04
      XvDHACYIgJE8YOoVVNv9jl80MP2FjsgTA5n7FNNfUvBPDcxep5i8S6EYBlgAr63yQN5w1kkJ
      6dkqcdixvbWM+MA4EnEexYKG2ZOzyC6vAQAqW6vQKY/M2DSgyRDFGJSK3NRGGHOxX/PpRksm
      k3jWARoxXWXxRDaQXKW4ssRhm+jIJigmCwxeJyK0ZQqW1HcNeYlCIqRO7JwpTgkoLRhNeoS5
      g3jh4l7LkwcRxy7/EEppCU/vPgZjVPDo3n0kRs7AMAxERk7iaKKMlYfXwcy9CzEqoeJgLQlD
      Bwh7nrzMvZcxB2aA8waP8tcKVJXiIsMD4EEL1LIQ8rbOpZ3fGdugCYCjYKHaBttKZnNCPxN/
      fzCnguyzh6C0Ak48gmpRg5CIoFIqoLDJAbSK3OYWZBWAWsDq80co6wkMDA9A4PeShjVvPhmh
      W+/BZMpO27ae0jSHeQVDCN7UBOi290EIaWkhbTVYO/GbStlLdAoBR46dgaxoiMYS0CbGoaoa
      IrEEdFUBww2AExMYO3YehGoYPf06AAIuJLO0uZN3C02+jB2G8MOknGEYMHQdm4VtfLmeRTKW
      xlxSwPWVDcRiKbw9MQrGpT1CSPAtxILzCzIMJ8fFwUGrie+lNCxIMQhS/Xc2EocY2fmdrf/C
      JTNgGAaGwUOQ6g6psIjWqzIaFvz0ZTIJA9RNYoloHO8fPYpcaQuRaBLvzR5FpZKDbHT7Ab5b
      ym4/Pq25ajIME+rO2wnx90ppZtb1uodQ5Bl8+vQpVEYCQzVce/oUVSKA68cZe4lQYfcKG4bR
      Fxa4Xu0cjMSy2JZlrBWKGEwPQNVqWC+VMZBKQ9dqoe8ArV5uP7z47zJMRgjT89vv4NIMkGdZ
      pOJJaKSMD4+fRIIDmFIZMwMnEOPC2RLNF7qHsxsV6L6wnLxEIw4zM3AAkBRFAMBUKm19MWn7
      vVM4Ej/2ysPfGcI/QMR0mAnfRM9sjV4I/LvABAS0LxVhJ7xkgA5gijTtxZrOiP7gMY1/ouo1
      IX6XxNHOzfgOsE9YS+dX/erQ+nLtJ6AXsx+wH2P+LhC+idAZwM+EEWr+r7vwOqaeWD8CENd+
      EGS33wUpLePUgAH1yZco7mNClGcGcFNkW8HbtQdvVe4IPomqF8TvtmN3lQn4KCaHOQxnwjO2
      BIGlA7R7UL8T4SVSrxfbu59+DqKIFAbs9n+n77qhD1BWxFauEGqbQWAxQKcPaFecPFt8ukhv
      5hgMw+grCxTBwdvzTO9wmO+IajIUTdv3mK/QrEBBAp+6RXOEEBiGAV3XIctVfPnsMa6vZmEY
      BubXlpGtKjAMA6qq4sn6Mv5q4Tmqmo4Xm2v4s0ePUVDrebNdm5yDxgE7sMcJdbpbEimNe9si
      arLS6bA6gi8GCH+V7A4HmOHUmqZhIbsKjU9gNhlFvpjDo60sto36d7ou40lZwcUkj2svlnB9
      PYd3xofwyfPFnQjJLjEApfV0Oscf2pc/lO7GCRGEE63LQgd1LFfSO3RsBTKjCHVdb3tdL60Z
      hBCwLIv1fAV6gsUvFzbxwxMncGYgAUXTwEUEUAOQayVclytQOQkJKPjzp89w7Mhs2+fpBNHo
      BrhMPfXQXEebq/Ts/cz5ulYIe5uxKcoGxdbGMKgwWP8m4G4wJCqIRiKhjC4oOmIAPw4TR2WK
      djcpnuM4jGVi2GaTYBQFBgFKigJdNGAAoITF69NHkS9uo0AkvMip+MHkCD7b2MaF9LhVRyds
      pCc4SFelrrTdC1AKpBdXsHJvExVlDJRP1OdWq9aZgXAAKKihgVAD4CJozH2lmozxtLTvhodA
      DNA46P1WZFrhxOgMHqytYnR0EkathJwhgC1toiwNQSEcytUyKlwcV4bSmIlymM9X8cOjU+Dc
      soBeAoQAqakoUpNAfmkBy3ejqBkzGBqcR2KEQi4bkBJsXTrgGDy/xUJhTgKEtczAvLKFI0OZ
      fX4SgCMEQItV3Mn+7/Z7OzilsHW7MhAhDM6Mju/8FcG7iYE93w9LR6zfBxMDeKvh+5doAQKk
      JmOIHzGQf3EHA0fjILaFw6SduRED209vI7sAVCpDgDSBMamGRCy676HXLXcA+8C8hjf4Ae2k
      yOZL9A1YnkHmWML6u5GgGY5g8GQSgycBuVDCs+vfYqU6hdXsFkb3eRdwtAI5OY9aOUteYi/2
      W67tN9jpSUwKmLjIQaMG7jzf3Hd6YiiaV/RGEadbgyS2//cDXhbk6gxe319sWMTxq0tg0pt4
      trrYg5G5g3MTwXvDmd3XAfzA9B90+uz7vartB7wQvv2a1EQcqYk4KteqoY7D/u67WhgrHPSf
      DrDfFi0n0bOfEXTHNJ9LFVXfNam8jMnre+uD6lP9xQD7jX4n+EYEHa/JONqgikq11nF7je16
      xT7vAC/hhP02DfqFPeGoMfmoXTKSEOdQzJcQ3zGJmvf4f36Kp/Pf4unKFo5MnYC29QIbxSog
      DuD9Ny6AUgPzd25hLW/gtbdewY1f/iU0Lt39HcDpQViWtX3eXytemHXyneC15YNocfNrPCGE
      QMoIWFSXQwk9mTlxDm+9cg4bK1nMXXwFb5ybQSo9AE3ToORe4N5SGYnMADhtG0vLMsanZ8Dd
      EQtYj27sTgwFSlUG5agIwhAYu6c7gZo/ZOcHe/8FAErq50FRcwWwXWsdiLFzRpWmUPx0a39j
      QRrRTaIjZoXsQwo32dtuHXJyhoqzLL6+fReXZs92oAsQKKUsPrlxF+nhCXAciy/nV3H1rTfA
      UgpdLiEyehTj/AZurwzid3//x3hx9wtwQ5MViFJ+T1PzyyJWp2IgIYTCOL0UlmXrR/UUdNCt
      zvsIE70q5toNx+J+wnwep+dq93yRjIhCutLh4mDg+eIqkoko8vk81NI6hIEJiCyLzbUNJEZP
      ALd+hacxDiMnNNz85jaqufL+6ADdjLTsJTqJcHVihsPACHb4eT/iLI/Vx+uYGB4N2htmT5yC
      rGiQIhEwMHBlrr6CJwfSYFkOH334HhQdiEgCpgYToIQLJxzaS9nzw4gwqyh3G/aSh3aG85IK
      24lO5PVeXdFB9U7eAwEviOAFcefvXVGKF+oncjKCaBG8tHM0a2AGsCuy5gmEL9G/oJRCVVXU
      tnJ49O0ypOEhTB4RMP/1IkZOzWJ8KgGWZXH/V7dQrBAce/UEik8XsbEl4/Rbc4jHWNfq0WEY
      DahGEY/GfO+qbjqHVzhqHF67d+voIJnwvkvgOA5ElHD2nTnUlrJ4dHcNF3/jElbvLEAnBKAK
      1p+XMXJsFMmIgbUicOJ0GotPs6CUuoquYexgfJzDs5VFqJrWMf00WqBaxbGFYga1rwrmzvCS
      CfoLZoZcJMLj4bV5jL9yHBPjMdz4i69RWK+BsCwII+DKx+fB1QqYn9+GpJbx8E4W8XQUDMO4
      HqQN7CWyIAzBxziox2p4trbo6357BUK3AM7G6+0IXBfI7uAwbee6ru/JEjssym7YIOh96UFz
      /p5cuwMjkoFWlpHKpHGkBhQHAJSqqFBg/cUm1LIMISWhTFkMDkso5qpgj3rLk7BXBmll/nRC
      6mgc5a1y4Gf0gsbMxMA6gFOugP3hu25PP9DKtfv7cdo5W13r9z1MX51DuSSD5QVEUgIGKIuZ
      4SSgaiAsh8kTo6gpQGooBuXYECoVHenhRMs27eNoFVncrg0AqDJVyLICSRLb3BEMjbTpiQGc
      iN08TcSuDNu9qF0LoT7kopVT6IAbU9hXWa+LTiQVRyQVt/7OjO4QGivU/03FYbompUQMUmva
      b1r82o3Z6Tv7vQzD9DQ8rK0O4EZwjSu9XRRyk8nCwMFe+YOhlSxLKfVc/KtX6GTehVEWhVLw
      0+pDC4YjLRpzetmN9mKzrk7LiSFAnhrI+igNQUDqdWr2M6jAqV6JJ9QvrlV0GFvK7idmGMlO
      u17nUBoQfM1R2HBayb3AzbdACAHLs56f36ldv3BlAFpv0RqYG5wOVWsXAWiCjTH420sqKFWb
      vyQOvxJbPI3tYfm8gMlL7T2IpOmXIHBI4vExYwSAAFjjp7AR/s41tA2DERAUlsrgJBZ89OAH
      9Nr1BzHNY/PhNoYGMj0Rdzt+e+YWbGZS2WXSdsklhCFgU0Efcvc+VmURGz64dXb8ghCCal4O
      LZC2nTIdNiG2a8/oIMfAzTHmFnriqgMQ4j3H08ny008y6WFBO1t3p3FJ7Xb6dvCaTddqnIZG
      EeGDW4DclO/GID1L6W7RlOOnbvK/ruuWZcj8eYlw4ET4BHtDqztlAlmWrTmr1WpN3+u6Dkop
      ZFlu6tP8XVEUX0zgpNzrsg6WYT1Ztfya253eY0sl2G+B2EbnV6PT4buCMEOd3VflcAMQG4lZ
      lmVrPmOxGDRNsz6314I1Pcwm8QuCEKhv8zmFBI/s8AbkJ1VEI5E60YKYVpmdqqm7vxPzc/vf
      AHTDADUMGNQANeqZLNRefBgUhLRUgtvL8F4frvvoX99AJwtAe/GT7pFnw4YkSRYjUErBcRx4
      ngfP86jVahBFcafKto5IJAJFaV3q3M1YYv5uMUGKw2r2CX7/0hFIPFOnWVDU/yM7hgNzx8Ou
      RbB+ya5vAgBD6j8sQ8AwAMcQsAwDjiXgGOJfCe7HFb1/yT9c7CGYnf+FNRcsy1qrO8uyrsqk
      Kd6akaGCIEDTNKiqCl3XwfN84DGYfQpxHplXhzAgcEhG3NsL49lddQDa4uX6sQqYDrJuYl99
      Aj7g973Z4ax7BW+/EYIggOd5MAwDURQhCHUfgyAIYBgGklSv5CxJEiiliEbrSezm9YQQ699O
      QQiBEefxZL3S9cW2LWWGwmVdZoB+RivLWNjmxU7milIKlmWtiE+7WdsunrAsa80nx3HW5xzH
      NRQ7aB2G3A5CksenHMW9FXevcBjvz3c+QBDNG3BmgrAYo9ciUKsX72dSOiHY/RD7vM6903WN
      C0G7dhiOQWIuhRuqiprqHlXs5X23usa5OG7bJv3B7bytsEylvVZJgiwAftAYVevYHwFC84Sh
      PhfVahXVatU6P81p7G7Zf+2C9wDv780e6KcejePeajnwTtIOXfejv/QHeJPnfYMC6q8rIJxZ
      umMnRMMWqeGnF9OsyXIsFFqGqijQeK5uCtfrxXEYhoGiKHVFlxDQnbklDFP/nRAwDLGsMdaw
      nAZjj38iAKEAJdQ6HMq83FApbmzXMCQJmBwSA4mRdhGu8X5HBmhUKvvN6tOEA2wGapwY7zsG
      wZu1ScS58OLma7UadF1HNBqFLMuW4qtpmvW3LMuIxWIol8sQBAGyLEMQBKiqCkmSLLG2Hc20
      8pU0vYMk8PDWJlZmchjLCOBZBkfSwp7rvYpmjXARwg8YRfU5fzbCzS3vF05BtEEtTZRSSJJk
      2fZNmJ5f87y0xtALURTB8zwikQgqlYr1eduxN4h37ZyHM9IguMVxrH6dwfVvZN/P6jamnugA
      32U4xUi5rfb+iBcOQane7rcHLNrHVa1WLVu+6eziOM7SB0y7f61WQyQSgaZpln5Xq9VC8QG0
      +jvJSeAJi+eFAqrKXtE6qEXo4MfSHhC4xVC5wcu2bhdV3eLrvcrMDMMgYjuylGVZy6wpSbuR
      tjzPW6ZS83NCiHWvU39hidAGpVgVVvEP3xmDyO+aaTuBJx2g/9E/4w1TX/IS5uBG+K0+8zNG
      t5W5U/OjXxBCsCJv4+QFBiK/K7h0ygRd0QHMbd4pI6w7VqGDL7QFMx16I8KwCdEp5dXN9h9W
      HBSlFEN8AptZ5x0tqGk6VBFo4+EiNterSM8Mo7a6iXJZBoklcOaVCeiyjIefPQYRI5i+MonC
      42WQxDBGZ+LtG26Hg0//TeiW5a3Tdu3e4aCrryfxzuF7keGgrI/gb2sreP9qm2x9W1/29hrH
      67IDBHtJAzOjOPnKOIorZUxensH4bBrJkSQIIZCLBZRyOgamB8ETA9FMHPKW3L5RL+h3M60H
      uIVMWJGNjSsv2T9RtdES5JepzBiiIEhwEuS8gJraXgl2S44BdqMQQhWB1EIRj29vYObyGAgB
      tlZljE0lQSlFZHAQl380B3VlDUWFRywdnv2622Sgquoe0a1dwa+gCUFuxNRqlW30GO+3z8Zr
      mIj9/bQS05w+n2FH8cubZaxsy9CN3ZW9lTe6UWwz+w9RBDLw4NpTJCcHUchWEGVqkEYGwRKC
      UrYMVjCw/HgbclFHylCw8M0SNpcMDJ1KIRbrbBjdlIDMbf7Br79BbruMgdmjKC+uorq9CfHU
      JVy+nMH6/ad4sViERnlcfnMKn//xDZz+nbdwZKdqQ6uSgt0csxPCTNZx6zvoPV7leZHlcFSe
      wZMbJSzOZPHG6bTF/O0ccZ48wcFAcPaH52AYAMtzYNkIxnYGE0lHwHAMpuYkEJYFxxEIF45h
      8gLASyGcwtFlJcAwDJx+5yKe3bgNXYri0keXcP+Tezh2IQNKKYq5Ks68cw6PP/0aBh/BmSvT
      oEY453y1Io79Xu39wqvc3+incNIZOIZFmo+iaDSLZH76DpUBhIizWMPydSIXIrvuaykWpgjU
      PUIghIDneTy6dhuRqVkcnUzAqBRgRNKIiPVw4BOvnMC3n8+jkDcgSiIqDAOwzeHBncCvwtl4
      faNe4XfVtaPbSVGNopxdD2oaS8OY3J7TDS0YgMJtZfWbKwwEs9f2TfYZVbD4IItYQQfHnYKW
      3cKJyzMghGBtIYtohEJVNYzPHYWcXceDu4ugKxWkPz4PSejS7uSh2aDxMWHdE4S5WvXXTEO0
      5Xvw0q8LA/QB0aHzBA8gHGcMYUS8/x9+sPvB2Kz165GjQwCA1z4etiboB39wpOM+nbCHAHZe
      TRCZ3st1nRCv02rcDVDshIT4GFMjAlmBglg4ws5+8tLffvTZy76aIoxdnFRBoSpVfPv8IZby
      hZ0cgQqWcjmrRMra1gq+fv4Ia6V6SfP1rRVU9fB0Ey+KPEGz7uAEX8Fwu03vP3pNxIcJjQzh
      lTHMaypyBQIn4auHd1CjBm7Of4VPnz7d8fJr+PbFAoYTaUgMg0o5i7+8+Rd4Vg1v/E56QNPO
      Qtzv8YK+T9bthQ5wUJksqPLv1VafiCSwlF2AwkWQz76AmJpARuStKuARluDmwj08zeVw69kz
      vH7sRCjz1W4+LCage0WgdjFTpuRiD9Hpewaww/3F9IfOclDRuDuYBFbTNHz//NsYJmUslMpY
      3lzEVy8eIadRMAyLM8fO48OzF7FeWEaxVsGNZ0/x7dIzVyeUV3iNnKU+2qa0XtTr9t1H+D//
      6iusllUsL60EswL1Gt1WqvrC0uQXPZgaWS7ik4e3MTA4g1cmp8BAw9nJbSSMCpZLLMq5JdzI
      V/H6yUtICxzKhWOoSZP14TkEswWFuzWQtlSCTWulORaWZTEwOIAfj4j41e1VFDeXD0Y+gD0A
      yxn9wahhwE+gWBCSarW6NtrbB1JH8OEFu0WLw+xQ3do1DgDx0zg1tTveWHIC8RCmwlzVvRhb
      7EpwI0y6MZ+H4ziwahV/M1/CR29M4H/945XOjkntJfzGxB9U+I2SDHNn9BJP5GV8Ydj9G4nX
      8ToP7djbYxgD//azpzgzlYGiRjA4RA6WDvASexEkLCJMM6m9zVZjCwI3b3Bz337aYvD9y8eh
      aTo0g+K3fnDRWQQ6cOvpgRtwd+CFYOxwE7eChFy0i1jtBuzVoL31zeD0ifE93/flDnCYRJr9
      gt9wBbe/211v9uUm+nTCYG2vI/5oxenavlSC+yYGqJ+xM5etQha8xl95Dado15ZZT7TxHie9
      xQ/cnqP+ub92GtF3DPCS+IOhV7tmJwpyN/rt9LGdRaB9kEAI2T1n2PeL/I7xi7Xq9+jB/Tib
      woTTbtI4FqbFuOwHt7uhL3YAk/iBcKpGHPZdhNLWYcDmNV53Bb+m116/35ahG2gtBrZD3yjB
      XmzQrugwIOqw4jB7zutEXz/2yP5Zoz7TbqzODLBPz/eyknR7WGKAx+tbWWZ6EbMfJprHu7dE
      i9P17eAsAvVYBzAfIkhyR/3iLgzqAIBSdzOjXUyxhzo0fhYGvJhO/fTX7no7rTT27Pe59kUH
      8Ju00L7BDgZzwNAJ4R6U1d7LOCmlTRlh7e5zYixnBqAAoQQIWyLZcVwQSmAe5EAphUF9dLRz
      3x5Q7JwFGyKov5S7XoNSwACF4cXuvufEihBAbNPQUh/fjSgONAYCkBaBfwY1fK19nv0Aoga8
      /3gdzN700w5Rf2W7Jjznhs3HJfYXZ93ffCVAcF8exPJ13poUYr/CNlmtXpbZD7H1TkHr9zQw
      ndWWQ4OO/XgZQMNzaSsbmDUizSet7CClAavVPLLVosNrdOvM6yD2Eu6e99n2fvNe26iIudqZ
      f9cZuAlOi5tbLwSQDQ1vkM7sOM4MwBh4fVAB10UbUZDKEm4oFgXkTp31dU9YFQu6hermt3hd
      zbhfIOz8OCCwLuURbu+uF/FA9r6LmgyC9Y7a2zczaD9YfPqV+OvoTNbvloWnUyIP9cjcEMRT
      l3yAPhV8XRBkmvub+PsXjRGnfkMwOs0Ma/4s2H0merIDvIzuDIL+fWdeQhTcrvfDAI27hT1R
      xutOYo6LYRjrHvs4nU+ICdug8nK19QVd1UCLT3Ef9wE4sQJxNQ0AaLYEtOCloiLgfOwSJNaf
      RdxLqEW35t0UnwmALx/nsLBebnpGAtO3ZF5pG5cl4xC3I5JeYj9BDQNz8U28mcmH0l4rhf/r
      jRh0VUcQl1BjLrHTd52gnZ7IgsGx4SiuHk/t+dxrTjEhtpTIvQ/Rv9vvdwXNdd8CtuOhokbY
      C16vdnyeYSFXm6uLe/U8U0rBgAC60ZAV5OGV9JVcf+i2rHDMEH01Ry7oJD+ZIwxqtebP/VjA
      OHmDg/qCR9kgMDIGYjEFgxRtfQAv5fruYs9+bFvRGle3dv6MsOfJ3l/j7hIk5qdxjH7bqJSa
      P/NzP3c6qYIbqZ/V9XVOwEo+gncHHNiqn9H/C10ANFtOGuv2tG3BCyH4fHd+LTqtCDoM5hSM
      CHSDgmUC7iL2Py6lFVygQMC29g+HcDNyDGToJGK2S2g3niD5v37AGAwKFRUDcRe3eLv7dbr3
      VR844j+kaBtx0wfEDzSLL92CW9sJJopCrfWhha3AsEx/vMiOcCiZ1l1s6Afi13XdOifA/LGb
      HcMOdXFjtCgjIF9WA7fLaMYhoB6vEYR9QDhe0atZCdKPndgXlh/i57eu4d56FrncKv7sm8/x
      Il+GqqrQNA26WsWffv05VFXGZ3e/xF/fvwtVNywG8j3eBp2CIwTFUvB5ZcpK4Hv7Bl4f/yCY
      BQHsxNjvP7O6lyPc/XwkM4m3Z09gYXURt168wLunL+L+i3kr7ODWk7uo6DVk1x+CGzqJ41IN
      93MlUEoDMUDjIsYzHAyV992OCUY/nPLDS4SAVjE/JoFzkPHLx/eRiCcg8DEILI8ox4HjONRK
      S5gvqKiWc9ClQSwvfov76ysoqPWS5W7nJ9tL5LQDAVAsdqADzBeEPlhrXqIR/bYsNRIjy7Jg
      WQZLuTxOjk0hX85DYqq4u7oAmZFQrlbARIfx1tEZREQRkhjDqdEJiJEhnMnEwbKsa0Bboz7R
      OI6m42dVvm1AnhtDcTQCFLcIkuJLNugnENKr+fDWj1vcz5F0BuulMt4/cxERFnixtYm58REo
      chWCEMXR4ShGUmlEeBGaUsXw8YvICO3jjuwEbVf8nZhDh9FWvzMPymhMxOIkQUdWZpEUNU8v
      4iV6AX+hEJ0UqupspyGIRZKYjSStT6aH6gdqCNGY5beIChEAwGjG//GxTlavpr89LhZObTGF
      HIfRSHAZ6rBivxXmxt69xtv7BYU/P6JXM2wY5Ve89kVIcJMrE2cMRLiX4k8j9ttk6mYFCpsx
      +9kw5rmMukdflt3qZM4vZ9D+fQOHvcZnKzTOvT347KAhSAECPzV+vCSHUUqhqipu3Z7HQl7D
      u1dPIr+2CmYlKWHdIaa6H3AQJ/u7BD9BeUHmsl11OBOsB/LVdR0sy2J2dgrvHo/hs3vbYMQI
      GD3D4f/VBlDVwt0JFGXXw9ZYpaAb5fk6gWG09kyaY9c0zfrX6Rr7v53CLgJ1EjMfyli6oHuE
      CXskqNuYGIYBz/PIb23hTz5fxKmjaWQkFhwoxcZoBA9eCLg8KIcyoOxmEb+Y3wIECZeGGHyz
      UsNKXsN/8P4EIgzBl/fX8Syv4rWzo5iOs/iTXz3ChVdO4FQ6mEev02kwvZLmtnNVGDkAAB1L
      SURBVFrLreHerQdQqYBX372MO7/+DIgN4+yVMyCE4Pk3N7CxkcfA9CmQ4nNs5lSMnTyLianh
      Pal4HMcFJtxekrvepjLffhN6O9GPZcmea53u5zgOlKpQEcXHbx7DrUcruLG1UU+JJDxwnYkj
      rOqCiYSEn74yCklRMTExgL93aRinJhKQCIGh6chBwG9dHsGT1TIePttCIsqhpO3vS+Y4zgru
      EhJDeOW9dxAxNCzdvoWaEIcYjYBhWRiGgYm585icnYRcLSG/uglGkJDM1PNSw1mpdw9/a2wv
      7J1gLKZgEzeQVyvNo+jxzhN0p7EzgNv99UWJBUdkLBUIPn5jGqcnh3ZzgtcSIr4sREJhAmJQ
      /M2dTbxy/ggiLItHiwWcmRkAy7LgWBYcRyAKAgxdxZ/f2cazjSq+XWqegF7B9EqKogie58ES
      A3evfYbJq6+AlzVMnr+MWHkFBZ0Dz/OgchXFQgUMy+HqT3+Gq29dwqNbX1mufW4nFCAI8dir
      HreKxWn8CYohScM7EyswxM9RUKvIykVsyWXcLT5DVettoFjQnYb1WCKFUuDY0Ql879wUBIbD
      1UvHdxNiyCCLv4gPYmMljx+nix3lBXzzYA1LFYA+zmHw/ABWFQbnEizkiox1jQFblfF/XV/G
      hVNH8NH5USwtLCOfSQfvMCSYhJS9cx2r2zKU2/dx9rWzuPG3vwDDCbhKi1hboyg+e4BSSQGf
      jODJzWvY2qogPjYLoPPKZ3UioL6D4Tot9Xh2KIv7W78AAwpKCeYyCh5treA4+wbYnfqb/WiJ
      ovBmBbLD7gkm/9Mv/gc6v3Xf+iC6ouA/Fdchsv3zkO3w88Isild/a7+HERq0Wg2v3/kjnEw2
      62ReVvuwCPTOZgxa5fuIsQKinADGxgj9AEIIdMPAevo53r4Y83R9Y7mU3aCMGsXIeg0/E7YP
      FPEfRlDqrgR7KUgVFk4NVLDA/QIUwJPiKHTlCDgWSHFpJLkYHpZWkOETAAhGpWS75vYgrJ3E
      AO0oFMJigLmFAn5nrNB3UYjecDBH3Qp+PMGtClR1Ap6hOJmqF0g4mVqAajwDQPC8GMOL0gC+
      P/sC61Ue99ePYgQX6zV2XOBE8F6YoJVot0vQHYRCAIC4qeK9TPkAk9Hh27E6oeVu7RA8Q8Ez
      Bk6kS3h74jkEhmIypuDk0AJuFH8NAMjKRcxXb0Mxdn0lJqEuVDZ3D/QgLUq57PwU1Zp174Zc
      wobSXAOFAh1VuOVACMbyNWQGwwuI6zdF6SDCjwjU+He3ldXGdmcSCrLVCu6XljGZuYVX41Xc
      XF+GUHsNq/I6WEbFlHQUmnATn21PYZAfQFbdwPcy56yDUKqagpxaxZa6DZ5IYIQlCEIWa7Uj
      KMsxjKaeIyFW8c3GHE7HZyAydeGFgnYUOs6BUhCW8X6AiQe8JP7O0elchDEHfixLV0cK0IY/
      BbdDjN8fL+B+7lNcTdXwyYtTWFXv46PJHIyxPNarHM4S4NaqjBH2JHRKsaE/wNmRFVyJqyir
      BDHO2NkFC3v6mU7cwmcvyohgBhORFCilaCzs4If5ORCgDNK2inDYCPeEloMrvDljVwve77Bs
      t/lxmj+uYSU+k64CAC6MPIZq1J17LCjGovUqDh/NPsHdrU3wrIrLyQpMf1acd6cJnjHw5tQ8
      HuWe4/b2cUSZYaQ7EoFAkITRkcxph9fCTWHuEvSw6QC2x3FSHHs2jJDmLyO5J1vNZfK+ly+e
      oZjLVDGX+RbPSzzWSqN4nhWQK8nQKcGF6RS4Nt5hE5xRMXAW3fHC9koX8H5s9EFBuJGT/QJH
      S1CHbU7HVYwbi3ixsIaMoIMhwJP1qzg11t4vAADcm+UCplPhBMEBzQWMesEE/T/1/kBbpGm5
      +QH63fDAsmzXinpxDMVsoh62UVRZX/TATMS0rmUFmQ+833LswYP3lMODAl3XfVWLCxJSwjCt
      PBEu9/RCfPA7Wf4Z5mARQzvQFgaJRh0rtPyDEBapVkTr51wvwH9pRat6hK+79vGY1FbwP6mH
      bYfpvQ4QSliChyOJ7NGrXotfeYElbbj06wbul5UYjGwUHwxW+jpB+jsFCuwXU3dTl9gThRnA
      DO7pHgJ8vaBgKWuu7bT5X7IbasJlB0Xc3xzAK0oVAy+LYzmi1wqmU1+tTlMJ1aTssa1278T8
      3s8KzzCM9Tzm7/YxeRobpUBtEoTJAJRaJnJqfrcDkxU5EAJJ19seifQS+4v9VHqdjmVqN56g
      xg+zbcMwmqq4OV1r9rXn850fELLXRO4wHG5gS8XxWg6J9AFe/bs89N4TXziH5IWFRoL3+j5a
      MYHTztVI7O10Ctf2vRTV3Xkm7v1IAWz6gJ0J1oh+opYw4IPfeiGedXLYRWOodthjdWzPQx9W
      TaHDQDsHeO9yBPUY3NEtx1K30KuxUng36zLPlEGs1QQQEp5J6iU6xMGh6Sb0Sw0hrzFU3MSb
      v4fs+tu4ef9ziBtfYZLNIi3qB2t1OSDD9IODuhQFruywU3Km1zTHEUIwNjGNyelZyPLPsPh0
      Ho/mryFVuINJsYgIRw8EM/R7LIw/HJbn8A63JB77Z0HTKs32ncCZJqe62YnF7KnzODF3CYV8
      Hk8ffoPqk08xIj/BWKQGluwfI7QziR0e4sd3kf6tAywaYSdwt7zgTtB0VIdZI1OKRHDmyvdA
      XnkbG+truDP/JbD4BcbpMgYlDQS9ZYaey5AGha4GP36zE2iqcnBloABo5dDr9ry3PKvGLBWY
      Sg8g89aPAPwIyy8WcGv+M0jZW5jktpAQjLrHrdshzz1mgNLqCo4+/7uulYgh9SXE+TtqYCgR
      PvP1Wkx027UbxRqnej0m/I5XZCk4ugFKB1pW1jPbbX9YEwBN06CqKhiGwdjkDKaOHket9u9g
      8ck9PHz4KQbK9zEulSGx/acvBC4dKFfxTnoTEa73ilm3EPQ5gjKOa9WHBqdamO+XZyjeGLqJ
      T9cJhhOnXPs3mZNjGKalfN04WE3TrErKMyfPgz97Bfl8Do/nb0FeuIYxbQHDorKv+oIJQgjk
      QgGxYhWC4K/ytBhN4+/Kr+KY8hCnojnQNhWUDzOCzuN+zf+AqGI6dg/b2gwkTnS8xtoBotEo
      OI5DuVx23a5MExWwG/NNab2kuKIoEAQRp668A+6197C2sow789eBpc8xza4jLehAt/WFFgu8
      XpPxwRtvYiCdDpBf+yEKhTzu/3//HGdi2/vO0C/hHWPRMp5tFl0ZwAQHADzPI5lMolqtQpZl
      EEKQSCSg6zpqtdqegyOctkPDMCDLMmRZRmogg+Hv/xTU+E28WHiMpw+vIbr5NaalPKLdMqm2
      bY6iWq02MbhdPHJz1ScSScjHfgJ15V81VT04TOhWqILZdq8Xj6rGgNvJN2ilXFs6AMMwiMVi
      EEURpljEcfVy4OVyuelmN7FJ13VUq1UQQjA+PYuZ46dQrVbx7OFtlB9/iuHqI4xHquAZ98OQ
      Q4eH/Fq3ahaKouD8Gx/gy//jM7wWeQqW9HDcPYSmaXWZ2KGs+0FMa52MKXiQ+wSK/mPwjLuq
      2/RN4/H1DMNAEASoDiZBM83NTXtXVdVSnk+cuwr+8pvYzGZx78ENqM8+xTRZRozrvCKdZgCG
      upPbTPfSu65qrpNnxpzbY9ftu4LpH6GU4vLv/he488Wfg3v2C5xN5A4NEyiygr/+dgNFDXj3
      TAZfz68irxH85OoYBOh4tlzAzaUyhoeSmOAUfJtVMX4khbeOJjz34ebkMtHpDuHsIAPeHsvj
      54srmEpNud9bqVRoJBJp2YFhGNA0DYqiQFVVizDM7/yINSzLgud5cByHpcXnqFYbKlIEXGgM
      g6JYLCKRSOzmnhIClmEwPT2NWq3WNMZIJIJqtV68SRRFiKIIVVWts8DsP+YBGtn1NWz+7X+P
      OWnl0DBBpabi5vwmRJEBpAiOMDK2uRjmBln88u46Tkyk8NXzIiLEwG9cHMXPb63ht1+d2O9h
      W3Azoxog+DfPL2I0ecn1Xk9mUHMXEAQBAKCqKgqFwh7vnVcGsB9GlxkcdvX+Nf7ejsk0TUMu
      l8Pw8HDTdbIsO95brVatXUBVVUSjUQiCgGKx2HRgnq7rqFQqGBweAf3BH+LJX/83mI2Xe+ID
      6TYW14soqAZGIjwkgYfEGCA6IAgCUiKHx2tVcIKAuQyLf3trHSsl90JXJrqpUzTCCm22GWgo
      pWBA8crgPXyRHcJkyplhA+WBcRxnMUMn0HUdmqY1/Ziik9vfTj9AfUWv1WpN3zmt1OaxSJRS
      CIIASilqtRo4jkMkErGykhoZr1qtYnh0HIkf/XPcohdB+7OugGdUyjU8WKuiUNWQSEq4/2Qd
      f/WogIkBHo/Wq1A0A4WKiqqqg2EIqGHgwtRA23bN9xb0GCe/19vnyT5fkzEFSX7JvR8vIpAT
      crmcdRSqSSxho3EVaScrKoqCarWKtIPJ0wui0SgkSYIsy6hUKi3bEEURxWIBK3/63+JcdL3v
      HID7iTBW/7AsRxTAv144idH0W47fB1q+TJHBLiN3A37arlQq0DQtMPED9R2pUCigVqu1XYFk
      WUY6PYDMB/8EN3MZYMcgcNCsJUHR6jnDoAn77mFaJQONiQKU7PoCTGOOppTw+befB2MAe9x2
      P6x8prMuHo935O63K79mm60mulqtYmJiAlO/+V/hM/4DPC5F64nY3wEmCBxi4gPmXJj01o4J
      nMy1RY0DIcNN165tb+LCqSvBRCBd15HP5/fsAvuNcrmMaDTa0aTYzbpelW/TQMDzPLIb65j/
      s/8RV6SnEJnDE0PkBC8iStgOMHvZFK99frE+CI39GBxbt/eYixzDAF/fux5sB2BZFpIkWR3u
      Bxr7jUQiqFQqkOXghX7tq43dB9AKhmGgVquhVCphIDOI1/7+P8NXxnkYB1w57gX80o4XPdM+
      XzmFw1L1kkX8ACzn7sMnX2Pq2KtggqahRSIRmDvHfjABz/N7+mUYBolEAoQQKIrS8wAuSqml
      OB//wT/AckU41KKQ/T21M2V7acMJTm34mZ+lkoDBaLP4AwAiL+Hug+tglpeXA006IQTxeNxS
      /Hox2fY+zK3MDsMwIIpiz1z3Tn1omoaBTAZrxkDP3st+w0k+9yMat4rb7wQsDOhwjjSYPXoe
      P7jyNphcLhdYbLBHivZC3jVfSGO4RiNKpdK+MQBQH1/iwk+Rk787VqEg1ZxNuNFOp6b1LSXe
      Mg4IAJh0Og2WZQN1YO4CvZ5kN+eWOSZRFK1stm7CLRiwVqvhzCvv4FHiHeiHVw9uiXY00a25
      sfc7Eimhqsp7vmscFzM0NASe95csYofpUe02vLzQ/Sir4QSryEByAprx3dgBGtEP8yCx+p5E
      Jnvkr/k7oyiKRThra2u+zZphyrnt2vFaFaIxJqTXk2H2yelVcMz+E8J+IkzpwL7QtmqXEIIt
      VcS3xRnEhTgANPl0TD2Rq1QquHnzpmVB0TQNKysruHLliifRiBACQRCseJww0a4khtu19he1
      n7Hs/OA08qscBgS1YyY0F5qczCAt7l0IGtvuFcN7sfP7HYvbXHldyCiloCB4kXobVEmBU9mm
      cHdzISWEgOM4zsr+AoCtrS1rC/eqG8RiMSiK0jETdDKR5kOaQW1uwXq9yk7SdR1nzl/B5w/O
      43XcQtBiP+aklVSCF2URtbl/D/r2M0TXv6gHCkLAqFCGyOpYr3I4mtAQ5XuTtNON99hqwSqo
      LMoai1FJRk7hILEGREZvmtNVOYqsNAaxJoMyFDVNhrFzMAalFBFWBEPqTjWOZVkkk0kAuysn
      x3Geid+0BEUiERSLxQ4fv3O0Kq3Ry9Q8WZbBsixGLv0YhRu3kRKCiWIUBL+SL2Jk7vtIj0xi
      bGwMlFLItd+rX0AICrlN5HLbGEgO4PaXP8cr6ifg9iENsZsghIABxTfbcagDPMir/wjr9/4U
      J/V7e67TKQNN17F47zqOnXwL0YlBTI8MIRKNgNk5qXLx6XNsLqxD3SiDLC8v08aOJElCMpn0
      fahZPp9HrVaz2gGcVwkzmT5IFGortIsbafys2wxhho3f+6t/iWP5v/NdZpJhGDwoxjH60/8a
      8WTKyqUwq3JEIhGL0cz+KpUy/vSP/jv8bOwFOFJfDA4aI7QSWeeZOUx9+IeIJ1K497//Uxyh
      K4iyBio6i1VuGtyx9zE59xpYlkOqhYVT13UsLy03J8RQWk8gp5QilUpZsTHVarVlrA3DMIjH
      41BV1TJBmtt34wSsrq4ik8lYMUXxeBzlchmRSASKouwZtKZpkCQJotg6u998cbquQxAExwR4
      t3vaEUi7soxu0DQNLMti7od/gG9/nQGz+BnmpGUwxBtRapSgMvk+BgaHUCwW99xjep4BWOKr
      qqqIxeK48vE/wLdf/EucEZYsputntIssNb+XdYJSpYRaqQBdN5Ab/h4WyjKipIaTF9/ExRNz
      nugEqCvFU9NT7gErtVoN+XzeWnHK5TLK5XLLl8lx3B4nldtqNzIygmw2i7W1NWQyGSwtLUGS
      JOTzeVQqFZRKJWxtbUGSJOi6jq2tLU8PBcAxdxmAleQvCP5DFNo53lpBlmUoioJLP/htjP7w
      P8eT6oAVOg24Tz7DMCgqBKmZS64ZbU6o1Wo4dvwEzvzOP8M3iY9R08P3RnfLstOY1NL4zCJL
      cUl6gY0Hn0KKRKCAxzsffIwf//3/GCfPXfZM/Hv6b/WlyQRAPfbGVHTbJYq0G0i5XIYoishk
      MlhbW8PIyAgEQUAsFgPLshAEAZlMBkB9dYvF2h97b47JqaqB/Xu7cuyVqOxMxTCMb7+Jpmmo
      VCrIDI0g8+F/iVv0IuYLMVR157GaeGTMYmp6xpdxwTQCsByHKx/8Lu6kf4JthQ/VVxPmjuLU
      lpMxxPypGjwMKYOb1z/HBx/9JkZHxzqLAG7UAfZ8udNwJpMBwzAol8tQFAXpdNqRCAzDsEQg
      k3HsbXX64kxzq5M4YlqtSqUSYrFY0zUmAdjFGbtZrPEluo3VVPoppU15w15glp0pl0t4dOsT
      HHnxJ8iIKiLsbvolIQQVjcGX5Cre+3f/M8/GhUafjLmYfPPZ32D2+f+GBN9973gQeKWNDUXC
      s8SbKLIZvPPehxgaGe2875WVFdouvjoSiSCZTMIwDJRKJYiiaIVDm6CUolQqoVKpIBqNWoWo
      7DbYTpxSlFKrT7M8ox1mTZtcLod4PN50v5tSbCe6RkdJN931oiiC5zksLy1iY+EuRp79PxiV
      6hUqKhqDu/H3cP693wfLcZ5jtRxd/Tui350/+xc4J38OxiU4bD/hhQHKGoONc38INj6MU6dP
      h5KTDgCcmUjeqjaoGV5sFs9y25J1Xbd2AXvgmj3TKijMcTAMA01zrvVDKXXcmdopWea/To60
      bsAUU1SVxfDIKMYnpvBiZALXrv0xpvEcz+kkXv/df9+yljWi0enX6r2aPp2x136G5b/8ClPR
      5vIw+wU/STXr7CROXnwdsVjz4tYJOEEQdhK8i66ErWmaZW4za/o0wl4riGEYRKNRlMtlixk6
      JX5gt1y7Uyy6XZRpzBxq5V0MAzseRVcF3A2mgUGWZYzNngGf+McgAM7vVKVwIn7A+/lX9utT
      6QEsMUcwTZ73DQOYaOWnMQyKLBnGyA/+k9CJH9hRgkVRtEIh3JDP51EsFiHLsmsRXZ7nwbKs
      pQinUqnQtioTZt92xci+ipvhHF7QyEj25Gs/Oxal1DfxN95fKBQQjUYxkMmA43nLnxIGTNNw
      4srvY6PGt2WYXsHt/VLUq/2tKVE8iL2D2G/8U4wfm+vKGDhgVyY10wrdBmtWhstkMk0ZWZRS
      xONxy1dgKovmytjJLtDq3sZVXhAEy2fRyBj29uz3mlheXkYikbBKq5gKvVkryIQp6uXzeSST
      SetdUFovH++1ioEJlmVRq9XA87wneT8IAddqNRw/cx43b45jmDzb512A4KtcCueSBWwrHKKs
      AZE1ILAUK3IM39QmwafG8fqPfwsnJqa7KpJasgwhBMlkEizLtrQ6mI4yU9Y2ict0XtmdWGa+
      AABXxgoDjYzolJ1kv87JSVer1RCLxZBKpZDL5bC8vIxIJAJRFCHL8h6lXhAErK+vI5FIIJvN
      gud5pFIpFItFK0d4cnLS8/hXV1cxPOycuucEJ6Xdyz0AEJn7GNn5/wWDQvC00U5BCFCJHcUt
      VkD01GWIAo/as+so1Axww1OYO3kZZ8+eBcsG9794xZ4eCCGWkmvWzHSCoijQdb1t2RCzTVPR
      DmI2tLfTahewEzTHcU0BcW5MYK8Ol81m9yj65koej8eRy+Us/4XZNsuyiEajUBQFW1tbYFkW
      lUrFcrZ5ITBFUTA0NOT7fbhZr9r1de7q2/j1/Kd4E3dAOrQIBdnVzfd9yriLQuptzL35Loql
      Em7XKI6Oj+P06TOBE7SCoKksiuliLxQKLW80xZtUKtV2wKaMXCqVAiest5PJ7cqw6bNwcsg5
      xZTbTbX2/hrDsesnae5aXcx8aNMnYPoYvG7ZhBCUSqWO6hk1Pkc7iKKI+19/jtnH/wIS01n0
      bhAGuFeIQ4sewWnmKZ6pI4h97x9BA4e5ubmOPO5B0TRTrawPdui6blWKbgdTbBgYGEAi4b2s
      tlfYwwoURUE+n3d9mU6Ks5347X83XmvvpzHG3O5o84pqtQpJkjoWRfzcr2kapk9ewKKS7li2
      DjJugedw7Cf/BE9n/gCrox+BcBIuXLiwL8QPuIRCeN2CzLLpXl+EKQ41OtE6AcMwVhRqoVCo
      WzsSCddncLMe2XUHc7X3YqO2/+sH5j2NfotuW2h0XUcikYB27GOs13iQkBTMdqLYliKAgoHK
      SMiur2GloOHK1ddwZq471h2vcGQ7P5GPiqL4ImhTz/AT4GXe53a96csQRdHX2BtXfj8VLhiG
      Acuyll7jVxzQdR08zztGrXZbOa3Vaph78yM8GZxC7sb/jFNStuMEGnMBcRr7gj6GzckP8Si/
      iIfrG7iS28BPf/t3epJL3g57dABK63nBsixbE+tma7d7esfHx33Z+ymlKJfLKJVKnifblK+d
      JkqW5UCiRKMY0wn8Em6tVkM0GnWMWfJKjHbF3u8zEFLP+7hz4xOMPvwjDIrhpG06tXFXP4Et
      VQQ/dAxjM6dw/tW3+8YX0bQDDA4OolQq7Skr4uR5NWGuhH5g7gI8z1sWJ5ZlLbt7IxiGaemj
      kCQJhUIBqVRqD/H0YjU14acfU0mPRqOu33t1xDUq64D3qmyyLOP8q+/gi+X7yGi/RtC0TXub
      1u8g0AwCjRIMay/AXvzHKORyfUX8AMCZ8q5pxQB2qz83el2dYIYgBGECURQhCAIikYjVTj6f
      d3QGtRJNTNOnU0Rno2XH3v9+TYRZwc7No57P56EoCoaHh/c8d7VatcyvQJ1RqtUqVFVFOp3e
      I44RQlAoFFoaHcwDRDKn30L2xjWMRDovRmW+04WigOtbaVz5yT8Eq1exmc3jox/9vb4ifgDg
      zAhOAJaCaq5MdhGlFfGVSiUrhdLvA9oJ0WSCRpgZaa1g5iTH4/E9bXhVZHsJ03HoJO6YRzGN
      j49jY2MDtVoNg4OD2NzchCAIyOfzlujEMIxljUsmk1hbW0MymQQhxHJmFotFiKKIwcHBPX1U
      q1Vr0Rg6MoEnk78HZvn/xpAYvOK3/V3OJhQMSpt4tv4IiI3g6MxMT+37XsGYL9B8KYVCwTKF
      OoUPOMFMnOmkKK0JM9+18ccLkslk21ACtx3B7Zpu7BStFEbTZyLLMlRVRSQSwerqqiWyDA0N
      WZ7parVqxT2Z+RdmpepUKrXnyFo7ZFlGIpGwHJQMw2Bq7lVsnP6P8KV8EqoRrKTjHhGIUiQ4
      DfLTa1h68Rxnzp333V4vsCchxr6CO9nBvRC3GT4QBGa+QWPCin0MrbZo0w9gNy06hT80PovT
      ZLdjFEJ2g//cAgRbwRRtnFZFcxeIxWJWrnStVtvJIeCtDDNJkvaEoBSLRUSj0T2/m1G8pphp
      MpLdaKEoipWNVyoVUfryX2FECqAUE4DsHPNJd86r/bR8DOeuvIGx8f45VdKO/x8XNQcvhq/A
      egAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='2.4 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3.2 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='4.1' width='192'>
      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
      +hBIZ0rz/wN8eEYEALEYLAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='4.1 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1 (2)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q1.1' width='192'>
      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
      9z69QTTR8thveGfMEDP9CVG5Kf7Z9qib4r9hhpjUxjKB6maiAfd3e0/LkqNA4vRJNrYdW1vP
      51e+EEckARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4m
      ARCOJgEQjuaM+wGqWuGt3x9/u7ZdmalMscGmMm3b96czPfZ2v2Nf+KPHV8sTcEYA/BFI/PD4
      27Wsww/9uFdU2wbsyqyoFZ0nuAJ9UWEyBBKOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQ
      jiYBEI4mARCOJgEQjuaIa4E29w74uz9OHH/DlboY7ovZdyrV9gm361IU/v3fXj7+Gp6CIwJQ
      LBuMzm2fdBniPtczdMGcDIGEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCE
      o0kAhKNJAISjSQCEo0kAhKNJAISjfS0ApXyard3skRvQinly++UjL3+QTZFK5wGL3Z1d7t/6
      gWmoZLL7pHd2MI7YViGXpqgedWnxzLEtpkZvsrSxB8Da3DgzS5sAaMUcm6kv10Pbtpm7d4up
      xQ1swCjlmFtex7ZMpseGmZhfe7AuPYmv3RAzMTbCZl7hV798g+zuHqWySjgcQDXd1CWr2Fpd
      JXimDpdZBixK+1lyVhV+pUwqU6Q2GWd7c5tYog4/GgclFcvlpy4RB+DendvkVC8//8XrrC4v
      Ewh6sSyLcjHLxHyWpN8gEI+Sye5T0kxamurZ21rH8kVJVAXYWN8kWlNPVSTA8vgI7taLJAMW
      xUKJZFMzVilHKluiubnhmbrxQnzd9PA19sMtTF17H/fLQ4wt5Yno8wQCrzE//AGZUCv/8iev
      ArAwco1dfzNtQQ9gc+Paxyzn8iQDP8IM1LAzeZ2q5G9pirmfqIaHA2CWyJa81Ic10rkcN64P
      M9hWxXI6yf7mEmcbI8znPeRHJkgGTYglaa4OkCnprE6tMXTpAuXCAdnsHrfGZhmohWLNABvT
      I/zzX/8KzAIHepCIu8iBarO3s4XPyrF+4GWgpxGA7E6KUmaFG/fyJNRNDL2Hialt7FKWnvZ6
      UmaYvlAVRAIAWFqJj2+N8kLHGUYLFrmlGS68dAkLGd8969xuF7ndHZR9lYm5bc4OvUh4f5VU
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q1.2 (2)' width='192'>
      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
      jjT/P26bKGWjuJIbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q1.3' width='192'>
      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
      zusAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      bb5tgqEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
